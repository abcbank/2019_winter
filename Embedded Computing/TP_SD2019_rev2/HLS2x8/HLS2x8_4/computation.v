// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module computation (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        O_BRAM_0_address0,
        O_BRAM_0_ce0,
        O_BRAM_0_q0,
        O_BRAM_0_address1,
        O_BRAM_0_ce1,
        O_BRAM_0_we1,
        O_BRAM_0_d1,
        O_BRAM_1_address0,
        O_BRAM_1_ce0,
        O_BRAM_1_q0,
        O_BRAM_1_address1,
        O_BRAM_1_ce1,
        O_BRAM_1_we1,
        O_BRAM_1_d1,
        O_BRAM_2_address0,
        O_BRAM_2_ce0,
        O_BRAM_2_q0,
        O_BRAM_2_address1,
        O_BRAM_2_ce1,
        O_BRAM_2_we1,
        O_BRAM_2_d1,
        O_BRAM_3_address0,
        O_BRAM_3_ce0,
        O_BRAM_3_q0,
        O_BRAM_3_address1,
        O_BRAM_3_ce1,
        O_BRAM_3_we1,
        O_BRAM_3_d1,
        O_BRAM_4_address0,
        O_BRAM_4_ce0,
        O_BRAM_4_q0,
        O_BRAM_4_address1,
        O_BRAM_4_ce1,
        O_BRAM_4_we1,
        O_BRAM_4_d1,
        O_BRAM_5_address0,
        O_BRAM_5_ce0,
        O_BRAM_5_q0,
        O_BRAM_5_address1,
        O_BRAM_5_ce1,
        O_BRAM_5_we1,
        O_BRAM_5_d1,
        O_BRAM_6_address0,
        O_BRAM_6_ce0,
        O_BRAM_6_q0,
        O_BRAM_6_address1,
        O_BRAM_6_ce1,
        O_BRAM_6_we1,
        O_BRAM_6_d1,
        O_BRAM_7_address0,
        O_BRAM_7_ce0,
        O_BRAM_7_q0,
        O_BRAM_7_address1,
        O_BRAM_7_ce1,
        O_BRAM_7_we1,
        O_BRAM_7_d1,
        I_BRAM_0_address0,
        I_BRAM_0_ce0,
        I_BRAM_0_q0,
        I_BRAM_1_address0,
        I_BRAM_1_ce0,
        I_BRAM_1_q0,
        W_BRAM_0_0_address0,
        W_BRAM_0_0_ce0,
        W_BRAM_0_0_q0,
        W_BRAM_0_1_address0,
        W_BRAM_0_1_ce0,
        W_BRAM_0_1_q0,
        W_BRAM_1_0_address0,
        W_BRAM_1_0_ce0,
        W_BRAM_1_0_q0,
        W_BRAM_1_1_address0,
        W_BRAM_1_1_ce0,
        W_BRAM_1_1_q0,
        W_BRAM_2_0_address0,
        W_BRAM_2_0_ce0,
        W_BRAM_2_0_q0,
        W_BRAM_2_1_address0,
        W_BRAM_2_1_ce0,
        W_BRAM_2_1_q0,
        W_BRAM_3_0_address0,
        W_BRAM_3_0_ce0,
        W_BRAM_3_0_q0,
        W_BRAM_3_1_address0,
        W_BRAM_3_1_ce0,
        W_BRAM_3_1_q0,
        W_BRAM_4_0_address0,
        W_BRAM_4_0_ce0,
        W_BRAM_4_0_q0,
        W_BRAM_4_1_address0,
        W_BRAM_4_1_ce0,
        W_BRAM_4_1_q0,
        W_BRAM_5_0_address0,
        W_BRAM_5_0_ce0,
        W_BRAM_5_0_q0,
        W_BRAM_5_1_address0,
        W_BRAM_5_1_ce0,
        W_BRAM_5_1_q0,
        W_BRAM_6_0_address0,
        W_BRAM_6_0_ce0,
        W_BRAM_6_0_q0,
        W_BRAM_6_1_address0,
        W_BRAM_6_1_ce0,
        W_BRAM_6_1_q0,
        W_BRAM_7_0_address0,
        W_BRAM_7_0_ce0,
        W_BRAM_7_0_q0,
        W_BRAM_7_1_address0,
        W_BRAM_7_1_ce0,
        W_BRAM_7_1_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] O_BRAM_0_address0;
output   O_BRAM_0_ce0;
input  [15:0] O_BRAM_0_q0;
output  [7:0] O_BRAM_0_address1;
output   O_BRAM_0_ce1;
output   O_BRAM_0_we1;
output  [15:0] O_BRAM_0_d1;
output  [7:0] O_BRAM_1_address0;
output   O_BRAM_1_ce0;
input  [15:0] O_BRAM_1_q0;
output  [7:0] O_BRAM_1_address1;
output   O_BRAM_1_ce1;
output   O_BRAM_1_we1;
output  [15:0] O_BRAM_1_d1;
output  [7:0] O_BRAM_2_address0;
output   O_BRAM_2_ce0;
input  [15:0] O_BRAM_2_q0;
output  [7:0] O_BRAM_2_address1;
output   O_BRAM_2_ce1;
output   O_BRAM_2_we1;
output  [15:0] O_BRAM_2_d1;
output  [7:0] O_BRAM_3_address0;
output   O_BRAM_3_ce0;
input  [15:0] O_BRAM_3_q0;
output  [7:0] O_BRAM_3_address1;
output   O_BRAM_3_ce1;
output   O_BRAM_3_we1;
output  [15:0] O_BRAM_3_d1;
output  [7:0] O_BRAM_4_address0;
output   O_BRAM_4_ce0;
input  [15:0] O_BRAM_4_q0;
output  [7:0] O_BRAM_4_address1;
output   O_BRAM_4_ce1;
output   O_BRAM_4_we1;
output  [15:0] O_BRAM_4_d1;
output  [7:0] O_BRAM_5_address0;
output   O_BRAM_5_ce0;
input  [15:0] O_BRAM_5_q0;
output  [7:0] O_BRAM_5_address1;
output   O_BRAM_5_ce1;
output   O_BRAM_5_we1;
output  [15:0] O_BRAM_5_d1;
output  [7:0] O_BRAM_6_address0;
output   O_BRAM_6_ce0;
input  [15:0] O_BRAM_6_q0;
output  [7:0] O_BRAM_6_address1;
output   O_BRAM_6_ce1;
output   O_BRAM_6_we1;
output  [15:0] O_BRAM_6_d1;
output  [7:0] O_BRAM_7_address0;
output   O_BRAM_7_ce0;
input  [15:0] O_BRAM_7_q0;
output  [7:0] O_BRAM_7_address1;
output   O_BRAM_7_ce1;
output   O_BRAM_7_we1;
output  [15:0] O_BRAM_7_d1;
output  [7:0] I_BRAM_0_address0;
output   I_BRAM_0_ce0;
input  [15:0] I_BRAM_0_q0;
output  [7:0] I_BRAM_1_address0;
output   I_BRAM_1_ce0;
input  [15:0] I_BRAM_1_q0;
output  [3:0] W_BRAM_0_0_address0;
output   W_BRAM_0_0_ce0;
input  [15:0] W_BRAM_0_0_q0;
output  [3:0] W_BRAM_0_1_address0;
output   W_BRAM_0_1_ce0;
input  [15:0] W_BRAM_0_1_q0;
output  [3:0] W_BRAM_1_0_address0;
output   W_BRAM_1_0_ce0;
input  [15:0] W_BRAM_1_0_q0;
output  [3:0] W_BRAM_1_1_address0;
output   W_BRAM_1_1_ce0;
input  [15:0] W_BRAM_1_1_q0;
output  [3:0] W_BRAM_2_0_address0;
output   W_BRAM_2_0_ce0;
input  [15:0] W_BRAM_2_0_q0;
output  [3:0] W_BRAM_2_1_address0;
output   W_BRAM_2_1_ce0;
input  [15:0] W_BRAM_2_1_q0;
output  [3:0] W_BRAM_3_0_address0;
output   W_BRAM_3_0_ce0;
input  [15:0] W_BRAM_3_0_q0;
output  [3:0] W_BRAM_3_1_address0;
output   W_BRAM_3_1_ce0;
input  [15:0] W_BRAM_3_1_q0;
output  [3:0] W_BRAM_4_0_address0;
output   W_BRAM_4_0_ce0;
input  [15:0] W_BRAM_4_0_q0;
output  [3:0] W_BRAM_4_1_address0;
output   W_BRAM_4_1_ce0;
input  [15:0] W_BRAM_4_1_q0;
output  [3:0] W_BRAM_5_0_address0;
output   W_BRAM_5_0_ce0;
input  [15:0] W_BRAM_5_0_q0;
output  [3:0] W_BRAM_5_1_address0;
output   W_BRAM_5_1_ce0;
input  [15:0] W_BRAM_5_1_q0;
output  [3:0] W_BRAM_6_0_address0;
output   W_BRAM_6_0_ce0;
input  [15:0] W_BRAM_6_0_q0;
output  [3:0] W_BRAM_6_1_address0;
output   W_BRAM_6_1_ce0;
input  [15:0] W_BRAM_6_1_q0;
output  [3:0] W_BRAM_7_0_address0;
output   W_BRAM_7_0_ce0;
input  [15:0] W_BRAM_7_0_q0;
output  [3:0] W_BRAM_7_1_address0;
output   W_BRAM_7_1_ce0;
input  [15:0] W_BRAM_7_1_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg O_BRAM_0_ce0;
reg O_BRAM_0_ce1;
reg O_BRAM_0_we1;
reg O_BRAM_1_ce0;
reg O_BRAM_1_ce1;
reg O_BRAM_1_we1;
reg O_BRAM_2_ce0;
reg O_BRAM_2_ce1;
reg O_BRAM_2_we1;
reg O_BRAM_3_ce0;
reg O_BRAM_3_ce1;
reg O_BRAM_3_we1;
reg O_BRAM_4_ce0;
reg O_BRAM_4_ce1;
reg O_BRAM_4_we1;
reg O_BRAM_5_ce0;
reg O_BRAM_5_ce1;
reg O_BRAM_5_we1;
reg O_BRAM_6_ce0;
reg O_BRAM_6_ce1;
reg O_BRAM_6_we1;
reg O_BRAM_7_ce0;
reg O_BRAM_7_ce1;
reg O_BRAM_7_we1;
reg I_BRAM_0_ce0;
reg I_BRAM_1_ce0;
reg W_BRAM_0_0_ce0;
reg W_BRAM_0_1_ce0;
reg W_BRAM_1_0_ce0;
reg W_BRAM_1_1_ce0;
reg W_BRAM_2_0_ce0;
reg W_BRAM_2_1_ce0;
reg W_BRAM_3_0_ce0;
reg W_BRAM_3_1_ce0;
reg W_BRAM_4_0_ce0;
reg W_BRAM_4_1_ce0;
reg W_BRAM_5_0_ce0;
reg W_BRAM_5_1_ce0;
reg W_BRAM_6_0_ce0;
reg W_BRAM_6_1_ce0;
reg W_BRAM_7_0_ce0;
reg W_BRAM_7_1_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten3_reg_444;
reg   [9:0] indvar_flatten4_reg_455;
reg   [7:0] indvar_flatten_reg_466;
reg   [1:0] r_reg_477;
reg   [1:0] s_reg_488;
reg   [3:0] te_reg_499;
reg   [3:0] tf_reg_510;
wire   [0:0] exitcond_flatten4_fu_521_p2;
reg   [0:0] exitcond_flatten4_reg_1048;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten4_reg_1048;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten4_reg_1048;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten4_reg_1048;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten4_reg_1048;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten4_reg_1048;
wire   [10:0] indvar_flatten_next4_fu_527_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_533_p2;
reg   [0:0] exitcond_flatten_reg_1057;
wire   [0:0] not_exitcond_flatten_fu_539_p2;
reg   [0:0] not_exitcond_flatten_reg_1068;
wire   [0:0] exitcond_flatten1_fu_545_p2;
reg   [0:0] exitcond_flatten1_reg_1073;
wire   [0:0] exitcond_flatten_mid_fu_551_p2;
reg   [0:0] exitcond_flatten_mid_reg_1078;
wire   [0:0] tmp_13_fu_557_p2;
reg   [0:0] tmp_13_reg_1086;
wire   [7:0] indvar_flatten_next_fu_569_p3;
wire   [9:0] indvar_flatten_next3_fu_583_p3;
wire   [1:0] r_cast1_mid2_fu_650_p3;
reg   [1:0] r_cast1_mid2_reg_1101;
reg    ap_enable_reg_pp0_iter1;
wire   [1:0] s_cast_mid2_fu_728_p3;
reg   [1:0] s_cast_mid2_reg_1106;
wire   [4:0] tmp_3_mid2_v_v_fu_745_p3;
reg   [4:0] tmp_3_mid2_v_v_reg_1112;
reg   [4:0] ap_reg_pp0_iter2_tmp_3_mid2_v_v_reg_1112;
wire   [3:0] tf_mid2_fu_791_p3;
reg   [3:0] tf_mid2_reg_1117;
reg   [3:0] ap_reg_pp0_iter2_tf_mid2_reg_1117;
reg   [3:0] ap_reg_pp0_iter3_tf_mid2_reg_1117;
reg   [3:0] ap_reg_pp0_iter4_tf_mid2_reg_1117;
wire   [3:0] tmp_5_mid2_fu_805_p3;
reg   [3:0] tmp_5_mid2_reg_1123;
wire   [3:0] tmp_7_mid2_fu_813_p3;
reg   [3:0] tmp_7_mid2_reg_1129;
reg   [3:0] ap_reg_pp0_iter2_tmp_7_mid2_reg_1129;
reg   [3:0] ap_reg_pp0_iter3_tmp_7_mid2_reg_1129;
reg   [3:0] ap_reg_pp0_iter4_tmp_7_mid2_reg_1129;
wire   [3:0] tf_1_fu_821_p2;
wire   [63:0] tmp_3_mid2_fu_874_p1;
reg   [63:0] tmp_3_mid2_reg_1150;
reg  signed [15:0] I_BRAM_0_load_reg_1162;
reg  signed [15:0] ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162;
reg  signed [15:0] I_BRAM_1_load_reg_1174;
wire  signed [15:0] tmp_52_0_1_fu_951_p2;
reg  signed [15:0] tmp_52_0_1_reg_1231;
wire  signed [15:0] tmp_52_1_1_fu_956_p2;
reg  signed [15:0] tmp_52_1_1_reg_1241;
wire  signed [15:0] tmp_52_2_1_fu_961_p2;
reg  signed [15:0] tmp_52_2_1_reg_1251;
wire  signed [15:0] tmp_52_3_1_fu_966_p2;
reg  signed [15:0] tmp_52_3_1_reg_1261;
wire  signed [15:0] tmp_52_4_1_fu_971_p2;
reg  signed [15:0] tmp_52_4_1_reg_1271;
wire  signed [15:0] tmp_52_5_1_fu_976_p2;
reg  signed [15:0] tmp_52_5_1_reg_1281;
wire  signed [15:0] tmp_52_6_1_fu_981_p2;
reg  signed [15:0] tmp_52_6_1_reg_1291;
wire  signed [15:0] tmp_52_7_1_fu_986_p2;
reg  signed [15:0] tmp_52_7_1_reg_1301;
reg   [7:0] O_BRAM_0_addr_reg_1306;
reg   [7:0] O_BRAM_1_addr_reg_1312;
reg   [7:0] O_BRAM_2_addr_reg_1318;
reg   [7:0] O_BRAM_3_addr_reg_1324;
reg   [7:0] O_BRAM_4_addr_reg_1330;
reg   [7:0] O_BRAM_5_addr_reg_1336;
reg   [7:0] O_BRAM_6_addr_reg_1342;
reg   [7:0] O_BRAM_7_addr_reg_1348;
wire  signed [15:0] grp_fu_1000_p3;
reg  signed [15:0] tmp1_reg_1354;
reg    ap_enable_reg_pp0_iter5;
wire  signed [15:0] grp_fu_1006_p3;
reg  signed [15:0] tmp2_reg_1359;
wire  signed [15:0] grp_fu_1012_p3;
reg  signed [15:0] tmp3_reg_1364;
wire  signed [15:0] grp_fu_1018_p3;
reg  signed [15:0] tmp4_reg_1369;
wire  signed [15:0] grp_fu_1024_p3;
reg  signed [15:0] tmp5_reg_1374;
wire  signed [15:0] grp_fu_1030_p3;
reg  signed [15:0] tmp6_reg_1379;
wire  signed [15:0] grp_fu_1036_p3;
reg  signed [15:0] tmp7_reg_1384;
wire  signed [15:0] grp_fu_1042_p3;
reg  signed [15:0] tmp8_reg_1389;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter6;
reg   [1:0] ap_phi_mux_r_phi_fu_481_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_s_phi_fu_492_p4;
reg   [3:0] ap_phi_mux_te_phi_fu_503_p4;
wire   [63:0] tmp_33_cast_fu_865_p1;
wire   [63:0] tmp_34_cast_fu_892_p1;
wire   [7:0] indvar_flatten_op_fu_563_p2;
wire   [9:0] indvar_flatten33_op_fu_577_p2;
wire   [3:0] p_shl_fu_599_p3;
wire   [4:0] p_shl_cast_fu_607_p1;
wire   [4:0] r_cast_fu_591_p1;
wire   [4:0] tmp_fu_611_p2;
wire   [4:0] s_cast1_fu_617_p1;
wire   [3:0] r_cast1_fu_595_p1;
wire   [1:0] r_1_fu_633_p2;
wire   [3:0] p_shl_mid1_fu_661_p3;
wire   [4:0] p_shl_cast_mid1_fu_669_p1;
wire   [4:0] r_cast_mid1_fu_646_p1;
wire   [4:0] tmp_mid1_fu_673_p2;
wire   [4:0] tmp_s_fu_621_p2;
wire   [3:0] tmp_5_mid_cast_fu_693_p1;
wire   [3:0] tmp_4_fu_627_p2;
wire   [0:0] exitcond_fu_704_p2;
wire   [1:0] s_mid_fu_639_p3;
wire   [1:0] s_1_fu_715_p2;
wire   [4:0] s_cast1_mid1_fu_735_p1;
wire   [4:0] tmp_mid2_fu_679_p3;
wire   [4:0] tmp_mid1_3_fu_739_p2;
wire   [4:0] tmp_3_mid254_v_v_fu_686_p3;
wire   [3:0] r_cast1_mid2_cast_fu_657_p1;
wire   [3:0] tmp_5_mid3_fu_697_p3;
wire   [0:0] exitcond_flatten_not_fu_759_p2;
wire   [0:0] exitcond3_mid_fu_710_p2;
wire   [0:0] not_exitcond_flatten_1_fu_764_p2;
wire   [3:0] te_mid_fu_721_p3;
wire   [0:0] exitcond3_mid1_fu_769_p2;
wire   [0:0] tmp_14_fu_781_p2;
wire   [0:0] tmp_35_fu_786_p2;
wire   [3:0] te_1_fu_775_p2;
wire   [3:0] tmp_4_mid1_fu_799_p2;
wire   [3:0] tmp_5_mid5_fu_752_p3;
wire   [7:0] tmp_36_fu_833_p3;
wire   [8:0] p_shl2_cast_fu_840_p1;
wire   [8:0] tmp_5_mid2_cast_fu_830_p1;
wire   [3:0] s_cast_mid2_cast_fu_827_p1;
wire   [3:0] tmp_8_fu_850_p2;
wire   [8:0] tmp_15_fu_844_p2;
wire   [8:0] tmp_9_cast_fu_855_p1;
wire   [8:0] tmp_17_fu_859_p2;
wire  signed [31:0] tmp_3_mid2_v_fu_871_p1;
wire   [7:0] grp_fu_991_p3;
wire   [3:0] grp_fu_991_p0;
wire   [4:0] grp_fu_991_p1;
wire   [3:0] grp_fu_991_p2;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [7:0] grp_fu_991_p00;
wire   [7:0] grp_fu_991_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U25(
    .din0(W_BRAM_0_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_0_1_fu_951_p2)
);

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U26(
    .din0(W_BRAM_1_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_1_1_fu_956_p2)
);

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U27(
    .din0(W_BRAM_2_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_2_1_fu_961_p2)
);

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U28(
    .din0(W_BRAM_3_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_3_1_fu_966_p2)
);

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U29(
    .din0(W_BRAM_4_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_4_1_fu_971_p2)
);

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U30(
    .din0(W_BRAM_5_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_5_1_fu_976_p2)
);

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U31(
    .din0(W_BRAM_6_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_6_1_fu_981_p2)
);

HLS2x8_4_mul_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mul_mul_bkb_U32(
    .din0(W_BRAM_7_1_q0),
    .din1(I_BRAM_1_load_reg_1174),
    .dout(tmp_52_7_1_fu_986_p2)
);

HLS2x8_4_mac_mulacud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
HLS2x8_4_mac_mulacud_U33(
    .din0(grp_fu_991_p0),
    .din1(grp_fu_991_p1),
    .din2(grp_fu_991_p2),
    .dout(grp_fu_991_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U34(
    .din0(W_BRAM_0_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_0_1_reg_1231),
    .dout(grp_fu_1000_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U35(
    .din0(W_BRAM_1_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_1_1_reg_1241),
    .dout(grp_fu_1006_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U36(
    .din0(W_BRAM_2_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_2_1_reg_1251),
    .dout(grp_fu_1012_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U37(
    .din0(W_BRAM_3_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_3_1_reg_1261),
    .dout(grp_fu_1018_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U38(
    .din0(W_BRAM_4_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_4_1_reg_1271),
    .dout(grp_fu_1024_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U39(
    .din0(W_BRAM_5_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_5_1_reg_1281),
    .dout(grp_fu_1030_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U40(
    .din0(W_BRAM_6_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_6_1_reg_1291),
    .dout(grp_fu_1036_p3)
);

HLS2x8_4_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS2x8_4_mac_muladEe_U41(
    .din0(W_BRAM_7_0_q0),
    .din1(ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162),
    .din2(tmp_52_7_1_reg_1301),
    .dout(grp_fu_1042_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten4_fu_521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_521_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten3_reg_444 <= indvar_flatten_next4_fu_527_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten3_reg_444 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_521_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten4_reg_455 <= indvar_flatten_next3_fu_583_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten4_reg_455 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_521_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_466 <= indvar_flatten_next_fu_569_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_466 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        r_reg_477 <= r_cast1_mid2_reg_1101;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_477 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_reg_488 <= s_cast_mid2_reg_1106;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_reg_488 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        te_reg_499 <= tmp_7_mid2_reg_1129;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        te_reg_499 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_1048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tf_reg_510 <= tf_1_fu_821_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tf_reg_510 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_0_load_reg_1162 <= I_BRAM_0_q0;
        I_BRAM_1_load_reg_1174 <= I_BRAM_1_q0;
        tmp_3_mid2_reg_1150[31 : 0] <= tmp_3_mid2_fu_874_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_0_addr_reg_1306 <= tmp_34_cast_fu_892_p1;
        O_BRAM_1_addr_reg_1312 <= tmp_34_cast_fu_892_p1;
        O_BRAM_2_addr_reg_1318 <= tmp_34_cast_fu_892_p1;
        O_BRAM_3_addr_reg_1324 <= tmp_34_cast_fu_892_p1;
        O_BRAM_4_addr_reg_1330 <= tmp_34_cast_fu_892_p1;
        O_BRAM_5_addr_reg_1336 <= tmp_34_cast_fu_892_p1;
        O_BRAM_6_addr_reg_1342 <= tmp_34_cast_fu_892_p1;
        O_BRAM_7_addr_reg_1348 <= tmp_34_cast_fu_892_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_exitcond_flatten4_reg_1048 <= exitcond_flatten4_reg_1048;
        exitcond_flatten4_reg_1048 <= exitcond_flatten4_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond_flatten4_reg_1048 <= ap_reg_pp0_iter1_exitcond_flatten4_reg_1048;
        ap_reg_pp0_iter2_tf_mid2_reg_1117 <= tf_mid2_reg_1117;
        ap_reg_pp0_iter2_tmp_3_mid2_v_v_reg_1112 <= tmp_3_mid2_v_v_reg_1112;
        ap_reg_pp0_iter2_tmp_7_mid2_reg_1129 <= tmp_7_mid2_reg_1129;
        ap_reg_pp0_iter3_exitcond_flatten4_reg_1048 <= ap_reg_pp0_iter2_exitcond_flatten4_reg_1048;
        ap_reg_pp0_iter3_tf_mid2_reg_1117 <= ap_reg_pp0_iter2_tf_mid2_reg_1117;
        ap_reg_pp0_iter3_tmp_7_mid2_reg_1129 <= ap_reg_pp0_iter2_tmp_7_mid2_reg_1129;
        ap_reg_pp0_iter4_I_BRAM_0_load_reg_1162 <= I_BRAM_0_load_reg_1162;
        ap_reg_pp0_iter4_exitcond_flatten4_reg_1048 <= ap_reg_pp0_iter3_exitcond_flatten4_reg_1048;
        ap_reg_pp0_iter4_tf_mid2_reg_1117 <= ap_reg_pp0_iter3_tf_mid2_reg_1117;
        ap_reg_pp0_iter4_tmp_7_mid2_reg_1129 <= ap_reg_pp0_iter3_tmp_7_mid2_reg_1129;
        ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 <= ap_reg_pp0_iter4_exitcond_flatten4_reg_1048;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten1_reg_1073 <= exitcond_flatten1_fu_545_p2;
        exitcond_flatten_mid_reg_1078 <= exitcond_flatten_mid_fu_551_p2;
        exitcond_flatten_reg_1057 <= exitcond_flatten_fu_533_p2;
        not_exitcond_flatten_reg_1068 <= not_exitcond_flatten_fu_539_p2;
        tmp_13_reg_1086 <= tmp_13_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_1048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_cast1_mid2_reg_1101 <= r_cast1_mid2_fu_650_p3;
        s_cast_mid2_reg_1106 <= s_cast_mid2_fu_728_p3;
        tmp_7_mid2_reg_1129 <= tmp_7_mid2_fu_813_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_1048 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tf_mid2_reg_1117 <= tf_mid2_fu_791_p3;
        tmp_3_mid2_v_v_reg_1112 <= tmp_3_mid2_v_v_fu_745_p3;
        tmp_5_mid2_reg_1123 <= tmp_5_mid2_fu_805_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        tmp1_reg_1354 <= grp_fu_1000_p3;
        tmp2_reg_1359 <= grp_fu_1006_p3;
        tmp3_reg_1364 <= grp_fu_1012_p3;
        tmp4_reg_1369 <= grp_fu_1018_p3;
        tmp5_reg_1374 <= grp_fu_1024_p3;
        tmp6_reg_1379 <= grp_fu_1030_p3;
        tmp7_reg_1384 <= grp_fu_1036_p3;
        tmp8_reg_1389 <= grp_fu_1042_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_52_0_1_reg_1231 <= tmp_52_0_1_fu_951_p2;
        tmp_52_1_1_reg_1241 <= tmp_52_1_1_fu_956_p2;
        tmp_52_2_1_reg_1251 <= tmp_52_2_1_fu_961_p2;
        tmp_52_3_1_reg_1261 <= tmp_52_3_1_fu_966_p2;
        tmp_52_4_1_reg_1271 <= tmp_52_4_1_fu_971_p2;
        tmp_52_5_1_reg_1281 <= tmp_52_5_1_fu_976_p2;
        tmp_52_6_1_reg_1291 <= tmp_52_6_1_fu_981_p2;
        tmp_52_7_1_reg_1301 <= tmp_52_7_1_fu_986_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        I_BRAM_0_ce0 = 1'b1;
    end else begin
        I_BRAM_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        I_BRAM_1_ce0 = 1'b1;
    end else begin
        I_BRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_0_ce0 = 1'b1;
    end else begin
        O_BRAM_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_0_ce1 = 1'b1;
    end else begin
        O_BRAM_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_0_we1 = 1'b1;
    end else begin
        O_BRAM_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_1_ce0 = 1'b1;
    end else begin
        O_BRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_1_ce1 = 1'b1;
    end else begin
        O_BRAM_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_1_we1 = 1'b1;
    end else begin
        O_BRAM_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_2_ce0 = 1'b1;
    end else begin
        O_BRAM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_2_ce1 = 1'b1;
    end else begin
        O_BRAM_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_2_we1 = 1'b1;
    end else begin
        O_BRAM_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_3_ce0 = 1'b1;
    end else begin
        O_BRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_3_ce1 = 1'b1;
    end else begin
        O_BRAM_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_3_we1 = 1'b1;
    end else begin
        O_BRAM_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_4_ce0 = 1'b1;
    end else begin
        O_BRAM_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_4_ce1 = 1'b1;
    end else begin
        O_BRAM_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_4_we1 = 1'b1;
    end else begin
        O_BRAM_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_5_ce0 = 1'b1;
    end else begin
        O_BRAM_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_5_ce1 = 1'b1;
    end else begin
        O_BRAM_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_5_we1 = 1'b1;
    end else begin
        O_BRAM_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_6_ce0 = 1'b1;
    end else begin
        O_BRAM_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_6_ce1 = 1'b1;
    end else begin
        O_BRAM_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_6_we1 = 1'b1;
    end else begin
        O_BRAM_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        O_BRAM_7_ce0 = 1'b1;
    end else begin
        O_BRAM_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_7_ce1 = 1'b1;
    end else begin
        O_BRAM_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten4_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        O_BRAM_7_we1 = 1'b1;
    end else begin
        O_BRAM_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_0_0_ce0 = 1'b1;
    end else begin
        W_BRAM_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_0_1_ce0 = 1'b1;
    end else begin
        W_BRAM_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_1_0_ce0 = 1'b1;
    end else begin
        W_BRAM_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_1_1_ce0 = 1'b1;
    end else begin
        W_BRAM_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_2_0_ce0 = 1'b1;
    end else begin
        W_BRAM_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_2_1_ce0 = 1'b1;
    end else begin
        W_BRAM_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_3_0_ce0 = 1'b1;
    end else begin
        W_BRAM_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_3_1_ce0 = 1'b1;
    end else begin
        W_BRAM_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_4_0_ce0 = 1'b1;
    end else begin
        W_BRAM_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_4_1_ce0 = 1'b1;
    end else begin
        W_BRAM_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_5_0_ce0 = 1'b1;
    end else begin
        W_BRAM_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_5_1_ce0 = 1'b1;
    end else begin
        W_BRAM_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_6_0_ce0 = 1'b1;
    end else begin
        W_BRAM_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_6_1_ce0 = 1'b1;
    end else begin
        W_BRAM_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        W_BRAM_7_0_ce0 = 1'b1;
    end else begin
        W_BRAM_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        W_BRAM_7_1_ce0 = 1'b1;
    end else begin
        W_BRAM_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_1048 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_r_phi_fu_481_p4 = r_cast1_mid2_reg_1101;
    end else begin
        ap_phi_mux_r_phi_fu_481_p4 = r_reg_477;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_1048 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_s_phi_fu_492_p4 = s_cast_mid2_reg_1106;
    end else begin
        ap_phi_mux_s_phi_fu_492_p4 = s_reg_488;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_1048 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_te_phi_fu_503_p4 = tmp_7_mid2_reg_1129;
    end else begin
        ap_phi_mux_te_phi_fu_503_p4 = te_reg_499;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign I_BRAM_0_address0 = tmp_33_cast_fu_865_p1;

assign I_BRAM_1_address0 = tmp_33_cast_fu_865_p1;

assign O_BRAM_0_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_0_address1 = O_BRAM_0_addr_reg_1306;

assign O_BRAM_0_d1 = ($signed(O_BRAM_0_q0) + $signed(tmp1_reg_1354));

assign O_BRAM_1_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_1_address1 = O_BRAM_1_addr_reg_1312;

assign O_BRAM_1_d1 = ($signed(O_BRAM_1_q0) + $signed(tmp2_reg_1359));

assign O_BRAM_2_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_2_address1 = O_BRAM_2_addr_reg_1318;

assign O_BRAM_2_d1 = ($signed(O_BRAM_2_q0) + $signed(tmp3_reg_1364));

assign O_BRAM_3_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_3_address1 = O_BRAM_3_addr_reg_1324;

assign O_BRAM_3_d1 = ($signed(O_BRAM_3_q0) + $signed(tmp4_reg_1369));

assign O_BRAM_4_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_4_address1 = O_BRAM_4_addr_reg_1330;

assign O_BRAM_4_d1 = ($signed(O_BRAM_4_q0) + $signed(tmp5_reg_1374));

assign O_BRAM_5_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_5_address1 = O_BRAM_5_addr_reg_1336;

assign O_BRAM_5_d1 = ($signed(O_BRAM_5_q0) + $signed(tmp6_reg_1379));

assign O_BRAM_6_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_6_address1 = O_BRAM_6_addr_reg_1342;

assign O_BRAM_6_d1 = ($signed(O_BRAM_6_q0) + $signed(tmp7_reg_1384));

assign O_BRAM_7_address0 = tmp_34_cast_fu_892_p1;

assign O_BRAM_7_address1 = O_BRAM_7_addr_reg_1348;

assign O_BRAM_7_d1 = ($signed(O_BRAM_7_q0) + $signed(tmp8_reg_1389));

assign W_BRAM_0_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_0_1_address0 = tmp_3_mid2_fu_874_p1;

assign W_BRAM_1_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_1_1_address0 = tmp_3_mid2_fu_874_p1;

assign W_BRAM_2_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_2_1_address0 = tmp_3_mid2_fu_874_p1;

assign W_BRAM_3_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_3_1_address0 = tmp_3_mid2_fu_874_p1;

assign W_BRAM_4_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_4_1_address0 = tmp_3_mid2_fu_874_p1;

assign W_BRAM_5_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_5_1_address0 = tmp_3_mid2_fu_874_p1;

assign W_BRAM_6_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_6_1_address0 = tmp_3_mid2_fu_874_p1;

assign W_BRAM_7_0_address0 = tmp_3_mid2_reg_1150;

assign W_BRAM_7_1_address0 = tmp_3_mid2_fu_874_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond3_mid1_fu_769_p2 = (not_exitcond_flatten_1_fu_764_p2 & exitcond3_mid_fu_710_p2);

assign exitcond3_mid_fu_710_p2 = (not_exitcond_flatten_reg_1068 & exitcond_fu_704_p2);

assign exitcond_flatten1_fu_545_p2 = ((indvar_flatten_reg_466 == 8'd169) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_521_p2 = ((indvar_flatten3_reg_444 == 11'd1521) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_533_p2 = ((indvar_flatten4_reg_455 == 10'd507) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_551_p2 = (not_exitcond_flatten_fu_539_p2 & exitcond_flatten1_fu_545_p2);

assign exitcond_flatten_not_fu_759_p2 = (exitcond_flatten1_reg_1073 ^ 1'd1);

assign exitcond_fu_704_p2 = ((tf_reg_510 == 4'd13) ? 1'b1 : 1'b0);

assign grp_fu_991_p0 = grp_fu_991_p00;

assign grp_fu_991_p00 = ap_reg_pp0_iter4_tmp_7_mid2_reg_1129;

assign grp_fu_991_p1 = 8'd13;

assign grp_fu_991_p2 = grp_fu_991_p20;

assign grp_fu_991_p20 = ap_reg_pp0_iter4_tf_mid2_reg_1117;

assign indvar_flatten33_op_fu_577_p2 = (indvar_flatten4_reg_455 + 10'd1);

assign indvar_flatten_next3_fu_583_p3 = ((exitcond_flatten_fu_533_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten33_op_fu_577_p2);

assign indvar_flatten_next4_fu_527_p2 = (indvar_flatten3_reg_444 + 11'd1);

assign indvar_flatten_next_fu_569_p3 = ((tmp_13_fu_557_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_563_p2);

assign indvar_flatten_op_fu_563_p2 = (indvar_flatten_reg_466 + 8'd1);

assign not_exitcond_flatten_1_fu_764_p2 = (exitcond_flatten_reg_1057 | exitcond_flatten_not_fu_759_p2);

assign not_exitcond_flatten_fu_539_p2 = (exitcond_flatten_fu_533_p2 ^ 1'd1);

assign p_shl2_cast_fu_840_p1 = tmp_36_fu_833_p3;

assign p_shl_cast_fu_607_p1 = p_shl_fu_599_p3;

assign p_shl_cast_mid1_fu_669_p1 = p_shl_mid1_fu_661_p3;

assign p_shl_fu_599_p3 = {{ap_phi_mux_r_phi_fu_481_p4}, {2'd0}};

assign p_shl_mid1_fu_661_p3 = {{r_1_fu_633_p2}, {2'd0}};

assign r_1_fu_633_p2 = (ap_phi_mux_r_phi_fu_481_p4 + 2'd1);

assign r_cast1_fu_595_p1 = ap_phi_mux_r_phi_fu_481_p4;

assign r_cast1_mid2_cast_fu_657_p1 = r_cast1_mid2_fu_650_p3;

assign r_cast1_mid2_fu_650_p3 = ((exitcond_flatten_reg_1057[0:0] === 1'b1) ? r_1_fu_633_p2 : ap_phi_mux_r_phi_fu_481_p4);

assign r_cast_fu_591_p1 = ap_phi_mux_r_phi_fu_481_p4;

assign r_cast_mid1_fu_646_p1 = r_1_fu_633_p2;

assign s_1_fu_715_p2 = (s_mid_fu_639_p3 + 2'd1);

assign s_cast1_fu_617_p1 = ap_phi_mux_s_phi_fu_492_p4;

assign s_cast1_mid1_fu_735_p1 = s_1_fu_715_p2;

assign s_cast_mid2_cast_fu_827_p1 = s_cast_mid2_reg_1106;

assign s_cast_mid2_fu_728_p3 = ((exitcond_flatten_mid_reg_1078[0:0] === 1'b1) ? s_1_fu_715_p2 : s_mid_fu_639_p3);

assign s_mid_fu_639_p3 = ((exitcond_flatten_reg_1057[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_s_phi_fu_492_p4);

assign te_1_fu_775_p2 = (te_mid_fu_721_p3 + 4'd1);

assign te_mid_fu_721_p3 = ((tmp_13_reg_1086[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_te_phi_fu_503_p4);

assign tf_1_fu_821_p2 = (tf_mid2_fu_791_p3 + 4'd1);

assign tf_mid2_fu_791_p3 = ((tmp_35_fu_786_p2[0:0] === 1'b1) ? 4'd0 : tf_reg_510);

assign tmp_13_fu_557_p2 = (exitcond_flatten_mid_fu_551_p2 | exitcond_flatten_fu_533_p2);

assign tmp_14_fu_781_p2 = (exitcond_flatten_mid_reg_1078 | exitcond3_mid1_fu_769_p2);

assign tmp_15_fu_844_p2 = (p_shl2_cast_fu_840_p1 - tmp_5_mid2_cast_fu_830_p1);

assign tmp_17_fu_859_p2 = (tmp_15_fu_844_p2 + tmp_9_cast_fu_855_p1);

assign tmp_33_cast_fu_865_p1 = tmp_17_fu_859_p2;

assign tmp_34_cast_fu_892_p1 = grp_fu_991_p3;

assign tmp_35_fu_786_p2 = (tmp_14_fu_781_p2 | exitcond_flatten_reg_1057);

assign tmp_36_fu_833_p3 = {{tmp_5_mid2_reg_1123}, {4'd0}};

assign tmp_3_mid254_v_v_fu_686_p3 = ((exitcond_flatten_reg_1057[0:0] === 1'b1) ? tmp_mid1_fu_673_p2 : tmp_s_fu_621_p2);

assign tmp_3_mid2_fu_874_p1 = $unsigned(tmp_3_mid2_v_fu_871_p1);

assign tmp_3_mid2_v_fu_871_p1 = $signed(ap_reg_pp0_iter2_tmp_3_mid2_v_v_reg_1112);

assign tmp_3_mid2_v_v_fu_745_p3 = ((exitcond_flatten_mid_reg_1078[0:0] === 1'b1) ? tmp_mid1_3_fu_739_p2 : tmp_3_mid254_v_v_fu_686_p3);

assign tmp_4_fu_627_p2 = (r_cast1_fu_595_p1 + ap_phi_mux_te_phi_fu_503_p4);

assign tmp_4_mid1_fu_799_p2 = (te_1_fu_775_p2 + r_cast1_mid2_cast_fu_657_p1);

assign tmp_5_mid2_cast_fu_830_p1 = tmp_5_mid2_reg_1123;

assign tmp_5_mid2_fu_805_p3 = ((exitcond3_mid1_fu_769_p2[0:0] === 1'b1) ? tmp_4_mid1_fu_799_p2 : tmp_5_mid5_fu_752_p3);

assign tmp_5_mid3_fu_697_p3 = ((exitcond_flatten_reg_1057[0:0] === 1'b1) ? tmp_5_mid_cast_fu_693_p1 : tmp_4_fu_627_p2);

assign tmp_5_mid5_fu_752_p3 = ((exitcond_flatten_mid_reg_1078[0:0] === 1'b1) ? r_cast1_mid2_cast_fu_657_p1 : tmp_5_mid3_fu_697_p3);

assign tmp_5_mid_cast_fu_693_p1 = r_1_fu_633_p2;

assign tmp_7_mid2_fu_813_p3 = ((exitcond3_mid1_fu_769_p2[0:0] === 1'b1) ? te_1_fu_775_p2 : te_mid_fu_721_p3);

assign tmp_8_fu_850_p2 = (tf_mid2_reg_1117 + s_cast_mid2_cast_fu_827_p1);

assign tmp_9_cast_fu_855_p1 = tmp_8_fu_850_p2;

assign tmp_fu_611_p2 = (p_shl_cast_fu_607_p1 - r_cast_fu_591_p1);

assign tmp_mid1_3_fu_739_p2 = (s_cast1_mid1_fu_735_p1 + tmp_mid2_fu_679_p3);

assign tmp_mid1_fu_673_p2 = (p_shl_cast_mid1_fu_669_p1 - r_cast_mid1_fu_646_p1);

assign tmp_mid2_fu_679_p3 = ((exitcond_flatten_reg_1057[0:0] === 1'b1) ? tmp_mid1_fu_673_p2 : tmp_fu_611_p2);

assign tmp_s_fu_621_p2 = (tmp_fu_611_p2 + s_cast1_fu_617_p1);

always @ (posedge ap_clk) begin
    tmp_3_mid2_reg_1150[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //computation
