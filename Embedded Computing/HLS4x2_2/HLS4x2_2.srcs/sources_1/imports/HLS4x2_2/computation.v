// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module computation (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        O_BRAM_0_address0,
        O_BRAM_0_ce0,
        O_BRAM_0_q0,
        O_BRAM_0_address1,
        O_BRAM_0_ce1,
        O_BRAM_0_we1,
        O_BRAM_0_d1,
        O_BRAM_1_address0,
        O_BRAM_1_ce0,
        O_BRAM_1_q0,
        O_BRAM_1_address1,
        O_BRAM_1_ce1,
        O_BRAM_1_we1,
        O_BRAM_1_d1,
        I_BRAM_0_address0,
        I_BRAM_0_ce0,
        I_BRAM_0_q0,
        I_BRAM_1_address0,
        I_BRAM_1_ce0,
        I_BRAM_1_q0,
        I_BRAM_2_address0,
        I_BRAM_2_ce0,
        I_BRAM_2_q0,
        I_BRAM_3_address0,
        I_BRAM_3_ce0,
        I_BRAM_3_q0,
        W_BRAM_0_0_address0,
        W_BRAM_0_0_ce0,
        W_BRAM_0_0_q0,
        W_BRAM_0_1_address0,
        W_BRAM_0_1_ce0,
        W_BRAM_0_1_q0,
        W_BRAM_0_2_address0,
        W_BRAM_0_2_ce0,
        W_BRAM_0_2_q0,
        W_BRAM_0_3_address0,
        W_BRAM_0_3_ce0,
        W_BRAM_0_3_q0,
        W_BRAM_1_0_address0,
        W_BRAM_1_0_ce0,
        W_BRAM_1_0_q0,
        W_BRAM_1_1_address0,
        W_BRAM_1_1_ce0,
        W_BRAM_1_1_q0,
        W_BRAM_1_2_address0,
        W_BRAM_1_2_ce0,
        W_BRAM_1_2_q0,
        W_BRAM_1_3_address0,
        W_BRAM_1_3_ce0,
        W_BRAM_1_3_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] O_BRAM_0_address0;
output   O_BRAM_0_ce0;
input  [15:0] O_BRAM_0_q0;
output  [9:0] O_BRAM_0_address1;
output   O_BRAM_0_ce1;
output   O_BRAM_0_we1;
output  [15:0] O_BRAM_0_d1;
output  [9:0] O_BRAM_1_address0;
output   O_BRAM_1_ce0;
input  [15:0] O_BRAM_1_q0;
output  [9:0] O_BRAM_1_address1;
output   O_BRAM_1_ce1;
output   O_BRAM_1_we1;
output  [15:0] O_BRAM_1_d1;
output  [9:0] I_BRAM_0_address0;
output   I_BRAM_0_ce0;
input  [15:0] I_BRAM_0_q0;
output  [9:0] I_BRAM_1_address0;
output   I_BRAM_1_ce0;
input  [15:0] I_BRAM_1_q0;
output  [9:0] I_BRAM_2_address0;
output   I_BRAM_2_ce0;
input  [15:0] I_BRAM_2_q0;
output  [9:0] I_BRAM_3_address0;
output   I_BRAM_3_ce0;
input  [15:0] I_BRAM_3_q0;
output  [4:0] W_BRAM_0_0_address0;
output   W_BRAM_0_0_ce0;
input  [15:0] W_BRAM_0_0_q0;
output  [4:0] W_BRAM_0_1_address0;
output   W_BRAM_0_1_ce0;
input  [15:0] W_BRAM_0_1_q0;
output  [4:0] W_BRAM_0_2_address0;
output   W_BRAM_0_2_ce0;
input  [15:0] W_BRAM_0_2_q0;
output  [4:0] W_BRAM_0_3_address0;
output   W_BRAM_0_3_ce0;
input  [15:0] W_BRAM_0_3_q0;
output  [4:0] W_BRAM_1_0_address0;
output   W_BRAM_1_0_ce0;
input  [15:0] W_BRAM_1_0_q0;
output  [4:0] W_BRAM_1_1_address0;
output   W_BRAM_1_1_ce0;
input  [15:0] W_BRAM_1_1_q0;
output  [4:0] W_BRAM_1_2_address0;
output   W_BRAM_1_2_ce0;
input  [15:0] W_BRAM_1_2_q0;
output  [4:0] W_BRAM_1_3_address0;
output   W_BRAM_1_3_ce0;
input  [15:0] W_BRAM_1_3_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg O_BRAM_0_ce0;
reg O_BRAM_0_ce1;
reg O_BRAM_0_we1;
reg O_BRAM_1_ce0;
reg O_BRAM_1_ce1;
reg O_BRAM_1_we1;
reg I_BRAM_0_ce0;
reg I_BRAM_1_ce0;
reg I_BRAM_2_ce0;
reg I_BRAM_3_ce0;
reg W_BRAM_0_0_ce0;
reg W_BRAM_0_1_ce0;
reg W_BRAM_0_2_ce0;
reg W_BRAM_0_3_ce0;
reg W_BRAM_1_0_ce0;
reg W_BRAM_1_1_ce0;
reg W_BRAM_1_2_ce0;
reg W_BRAM_1_3_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] indvar_flatten3_reg_260;
reg   [12:0] indvar_flatten4_reg_271;
reg   [9:0] indvar_flatten_reg_282;
reg   [2:0] r_reg_293;
reg   [2:0] s_reg_304;
reg   [4:0] te_reg_315;
reg   [4:0] tf_reg_326;
wire   [0:0] exitcond_flatten4_fu_337_p2;
reg   [0:0] exitcond_flatten4_reg_783;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten4_reg_783;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten4_reg_783;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten4_reg_783;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten4_reg_783;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten4_reg_783;
wire   [14:0] indvar_flatten_next4_fu_343_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_349_p2;
reg   [0:0] exitcond_flatten_reg_792;
wire   [0:0] not_exitcond_flatten_fu_355_p2;
reg   [0:0] not_exitcond_flatten_reg_803;
wire   [0:0] exitcond_flatten1_fu_361_p2;
reg   [0:0] exitcond_flatten1_reg_808;
wire   [0:0] exitcond_flatten_mid_fu_367_p2;
reg   [0:0] exitcond_flatten_mid_reg_813;
wire   [0:0] tmp_fu_373_p2;
reg   [0:0] tmp_reg_821;
wire   [9:0] indvar_flatten_next_fu_385_p3;
wire   [12:0] indvar_flatten_next3_fu_399_p3;
wire   [2:0] r_cast1_mid2_fu_466_p3;
reg   [2:0] r_cast1_mid2_reg_836;
reg    ap_enable_reg_pp0_iter1;
wire   [2:0] s_cast1_mid2_fu_540_p3;
reg   [2:0] s_cast1_mid2_reg_841;
wire   [4:0] tmp_4_mid2_v_fu_571_p3;
reg   [4:0] tmp_4_mid2_v_reg_846;
reg   [4:0] ap_reg_pp0_iter2_tmp_4_mid2_v_reg_846;
wire   [4:0] tf_mid2_fu_617_p3;
reg   [4:0] tf_mid2_reg_851;
reg   [4:0] ap_reg_pp0_iter2_tf_mid2_reg_851;
wire   [4:0] tmp_6_mid2_fu_631_p3;
reg   [4:0] tmp_6_mid2_reg_856;
wire   [4:0] tmp_7_mid2_fu_639_p3;
reg   [4:0] tmp_7_mid2_reg_862;
reg   [4:0] ap_reg_pp0_iter2_tmp_7_mid2_reg_862;
wire   [4:0] tmp_8_fu_647_p2;
reg   [4:0] tmp_8_reg_868;
wire   [4:0] tf_1_fu_653_p2;
reg   [9:0] O_BRAM_0_addr_reg_898;
reg   [9:0] ap_reg_pp0_iter4_O_BRAM_0_addr_reg_898;
reg   [9:0] ap_reg_pp0_iter5_O_BRAM_0_addr_reg_898;
reg   [9:0] O_BRAM_1_addr_reg_904;
reg   [9:0] ap_reg_pp0_iter4_O_BRAM_1_addr_reg_904;
reg   [9:0] ap_reg_pp0_iter5_O_BRAM_1_addr_reg_904;
reg  signed [15:0] I_BRAM_0_load_reg_910;
reg  signed [15:0] I_BRAM_1_load_reg_921;
reg  signed [15:0] ap_reg_pp0_iter4_I_BRAM_1_load_reg_921;
reg  signed [15:0] I_BRAM_2_load_reg_932;
reg  signed [15:0] ap_reg_pp0_iter4_I_BRAM_2_load_reg_932;
reg  signed [15:0] I_BRAM_3_load_reg_943;
reg  signed [15:0] W_BRAM_0_1_load_reg_974;
reg  signed [15:0] W_BRAM_0_2_load_reg_979;
wire  signed [15:0] tmp_52_0_3_fu_742_p2;
reg  signed [15:0] tmp_52_0_3_reg_984;
wire  signed [15:0] grp_fu_735_p3;
reg  signed [15:0] tmp2_reg_989;
reg    ap_enable_reg_pp0_iter4;
reg  signed [15:0] W_BRAM_1_1_load_reg_994;
reg  signed [15:0] W_BRAM_1_2_load_reg_999;
wire  signed [15:0] tmp_52_1_3_fu_754_p2;
reg  signed [15:0] tmp_52_1_3_reg_1004;
wire  signed [15:0] grp_fu_747_p3;
reg  signed [15:0] tmp5_reg_1009;
(* use_dsp48 = "no" *) wire   [15:0] tmp_12_fu_718_p2;
reg   [15:0] tmp_12_reg_1014;
(* use_dsp48 = "no" *) wire   [15:0] tmp_54_1_fu_722_p2;
reg   [15:0] tmp_54_1_reg_1019;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [2:0] ap_phi_mux_r_phi_fu_297_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_s_phi_fu_308_p4;
reg   [4:0] ap_phi_mux_te_phi_fu_319_p4;
wire   [63:0] tmp_31_cast_fu_688_p1;
wire   [63:0] tmp_32_cast_fu_713_p1;
wire   [63:0] tmp_4_mid2_fu_696_p1;
wire   [9:0] indvar_flatten_op_fu_379_p2;
wire   [12:0] indvar_flatten25_op_fu_393_p2;
wire   [3:0] r_cast_fu_411_p1;
wire   [3:0] s_cast_fu_423_p1;
wire   [3:0] tmp1_fu_427_p2;
wire   [4:0] tmp1_cast_fu_433_p1;
wire   [4:0] p_shl_fu_415_p3;
wire   [4:0] r_cast1_fu_407_p1;
wire   [2:0] r_1_fu_449_p2;
wire   [4:0] p_shl_mid1_fu_481_p3;
wire   [4:0] r_cast1_mid1_fu_462_p1;
wire   [4:0] tmp_mid_fu_496_p2;
wire   [4:0] tmp_s_fu_437_p2;
wire   [4:0] tmp_5_fu_443_p2;
wire   [0:0] exitcond_fu_516_p2;
wire   [2:0] s_mid_fu_455_p3;
wire   [2:0] s_1_fu_527_p2;
wire   [3:0] s_cast_mid1_fu_551_p1;
wire   [3:0] r_cast_mid2_cast_fu_477_p1;
wire   [3:0] tmp1_mid1_fu_555_p2;
wire   [4:0] p_shl_mid2_fu_489_p3;
wire   [4:0] tmp1_cast_mid1_fu_561_p1;
wire   [4:0] tmp_mid1_fu_565_p2;
wire   [4:0] tmp_4_mid248_v_fu_502_p3;
wire   [4:0] r_cast1_mid2_cast_fu_473_p1;
wire   [4:0] tmp_6_mid3_fu_509_p3;
wire   [0:0] exitcond_flatten_not_fu_585_p2;
wire   [0:0] exitcond3_mid_fu_522_p2;
wire   [0:0] not_exitcond_flatten_1_fu_590_p2;
wire   [4:0] te_mid_fu_533_p3;
wire   [0:0] exitcond3_mid1_fu_595_p2;
wire   [0:0] tmp_13_fu_607_p2;
wire   [0:0] tmp_33_fu_612_p2;
wire   [4:0] te_1_fu_601_p2;
wire   [4:0] tmp_5_mid1_fu_625_p2;
wire   [4:0] tmp_6_mid5_fu_578_p3;
wire   [4:0] s_cast1_mid2_cast_fu_547_p1;
wire   [9:0] tmp_34_fu_662_p3;
wire   [10:0] p_shl2_cast_fu_669_p1;
wire   [10:0] tmp_6_mid2_cast_fu_659_p1;
wire   [10:0] tmp_14_fu_673_p2;
wire   [10:0] tmp_9_cast_fu_679_p1;
wire   [10:0] tmp_16_fu_682_p2;
wire   [9:0] grp_fu_726_p3;
wire  signed [15:0] grp_fu_759_p3;
wire  signed [15:0] grp_fu_771_p3;
wire   [4:0] grp_fu_726_p0;
wire   [5:0] grp_fu_726_p1;
wire   [4:0] grp_fu_726_p2;
wire  signed [15:0] grp_fu_765_p3;
wire  signed [15:0] grp_fu_777_p3;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_726_p00;
wire   [9:0] grp_fu_726_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

HLS4x2_2_mac_mulabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
HLS4x2_2_mac_mulabkb_U19(
    .din0(grp_fu_726_p0),
    .din1(grp_fu_726_p1),
    .din2(grp_fu_726_p2),
    .dout(grp_fu_726_p3)
);

HLS4x2_2_mac_mulacud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mac_mulacud_U20(
    .din0(W_BRAM_0_0_q0),
    .din1(I_BRAM_0_load_reg_910),
    .din2(O_BRAM_0_q0),
    .dout(grp_fu_735_p3)
);

HLS4x2_2_mul_mul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mul_mul_dEe_U21(
    .din0(W_BRAM_0_3_q0),
    .din1(I_BRAM_3_load_reg_943),
    .dout(tmp_52_0_3_fu_742_p2)
);

HLS4x2_2_mac_mulacud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mac_mulacud_U22(
    .din0(W_BRAM_1_0_q0),
    .din1(I_BRAM_0_load_reg_910),
    .din2(O_BRAM_1_q0),
    .dout(grp_fu_747_p3)
);

HLS4x2_2_mul_mul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mul_mul_dEe_U23(
    .din0(W_BRAM_1_3_q0),
    .din1(I_BRAM_3_load_reg_943),
    .dout(tmp_52_1_3_fu_754_p2)
);

HLS4x2_2_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mac_mulaeOg_U24(
    .din0(W_BRAM_0_1_load_reg_974),
    .din1(ap_reg_pp0_iter4_I_BRAM_1_load_reg_921),
    .din2(grp_fu_765_p3),
    .dout(grp_fu_759_p3)
);

HLS4x2_2_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mac_mulaeOg_U25(
    .din0(W_BRAM_0_2_load_reg_979),
    .din1(ap_reg_pp0_iter4_I_BRAM_2_load_reg_932),
    .din2(tmp_52_0_3_reg_984),
    .dout(grp_fu_765_p3)
);

HLS4x2_2_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mac_mulaeOg_U26(
    .din0(W_BRAM_1_1_load_reg_994),
    .din1(ap_reg_pp0_iter4_I_BRAM_1_load_reg_921),
    .din2(grp_fu_777_p3),
    .dout(grp_fu_771_p3)
);

HLS4x2_2_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_2_mac_mulaeOg_U27(
    .din0(W_BRAM_1_2_load_reg_999),
    .din1(ap_reg_pp0_iter4_I_BRAM_2_load_reg_932),
    .din2(tmp_52_1_3_reg_1004),
    .dout(grp_fu_777_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_fu_337_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_337_p2 == 1'd0))) begin
        indvar_flatten3_reg_260 <= indvar_flatten_next4_fu_343_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten3_reg_260 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_337_p2 == 1'd0))) begin
        indvar_flatten4_reg_271 <= indvar_flatten_next3_fu_399_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten4_reg_271 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_337_p2 == 1'd0))) begin
        indvar_flatten_reg_282 <= indvar_flatten_next_fu_385_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_282 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_reg_293 <= r_cast1_mid2_reg_836;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_293 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        s_reg_304 <= s_cast1_mid2_reg_841;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_reg_304 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        te_reg_315 <= tmp_7_mid2_reg_862;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        te_reg_315 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_783 == 1'd0))) begin
        tf_reg_326 <= tf_1_fu_653_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tf_reg_326 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_0_load_reg_910 <= I_BRAM_0_q0;
        I_BRAM_1_load_reg_921 <= I_BRAM_1_q0;
        I_BRAM_2_load_reg_932 <= I_BRAM_2_q0;
        I_BRAM_3_load_reg_943 <= I_BRAM_3_q0;
        O_BRAM_0_addr_reg_898 <= tmp_32_cast_fu_713_p1;
        O_BRAM_1_addr_reg_904 <= tmp_32_cast_fu_713_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_1_load_reg_974 <= W_BRAM_0_1_q0;
        W_BRAM_0_2_load_reg_979 <= W_BRAM_0_2_q0;
        W_BRAM_1_1_load_reg_994 <= W_BRAM_1_1_q0;
        W_BRAM_1_2_load_reg_999 <= W_BRAM_1_2_q0;
        tmp_52_0_3_reg_984 <= tmp_52_0_3_fu_742_p2;
        tmp_52_1_3_reg_1004 <= tmp_52_1_3_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_flatten4_reg_783 <= exitcond_flatten4_reg_783;
        exitcond_flatten4_reg_783 <= exitcond_flatten4_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond_flatten4_reg_783 <= ap_reg_pp0_iter1_exitcond_flatten4_reg_783;
        ap_reg_pp0_iter2_tf_mid2_reg_851 <= tf_mid2_reg_851;
        ap_reg_pp0_iter2_tmp_4_mid2_v_reg_846 <= tmp_4_mid2_v_reg_846;
        ap_reg_pp0_iter2_tmp_7_mid2_reg_862 <= tmp_7_mid2_reg_862;
        ap_reg_pp0_iter3_exitcond_flatten4_reg_783 <= ap_reg_pp0_iter2_exitcond_flatten4_reg_783;
        ap_reg_pp0_iter4_I_BRAM_1_load_reg_921 <= I_BRAM_1_load_reg_921;
        ap_reg_pp0_iter4_I_BRAM_2_load_reg_932 <= I_BRAM_2_load_reg_932;
        ap_reg_pp0_iter4_O_BRAM_0_addr_reg_898 <= O_BRAM_0_addr_reg_898;
        ap_reg_pp0_iter4_O_BRAM_1_addr_reg_904 <= O_BRAM_1_addr_reg_904;
        ap_reg_pp0_iter4_exitcond_flatten4_reg_783 <= ap_reg_pp0_iter3_exitcond_flatten4_reg_783;
        ap_reg_pp0_iter5_O_BRAM_0_addr_reg_898 <= ap_reg_pp0_iter4_O_BRAM_0_addr_reg_898;
        ap_reg_pp0_iter5_O_BRAM_1_addr_reg_904 <= ap_reg_pp0_iter4_O_BRAM_1_addr_reg_904;
        ap_reg_pp0_iter5_exitcond_flatten4_reg_783 <= ap_reg_pp0_iter4_exitcond_flatten4_reg_783;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_337_p2 == 1'd0))) begin
        exitcond_flatten1_reg_808 <= exitcond_flatten1_fu_361_p2;
        exitcond_flatten_mid_reg_813 <= exitcond_flatten_mid_fu_367_p2;
        exitcond_flatten_reg_792 <= exitcond_flatten_fu_349_p2;
        not_exitcond_flatten_reg_803 <= not_exitcond_flatten_fu_355_p2;
        tmp_reg_821 <= tmp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_783 == 1'd0))) begin
        r_cast1_mid2_reg_836 <= r_cast1_mid2_fu_466_p3;
        s_cast1_mid2_reg_841 <= s_cast1_mid2_fu_540_p3;
        tmp_7_mid2_reg_862 <= tmp_7_mid2_fu_639_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_783 == 1'd0))) begin
        tf_mid2_reg_851 <= tf_mid2_fu_617_p3;
        tmp_4_mid2_v_reg_846 <= tmp_4_mid2_v_fu_571_p3;
        tmp_6_mid2_reg_856 <= tmp_6_mid2_fu_631_p3;
        tmp_8_reg_868 <= tmp_8_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp2_reg_989 <= grp_fu_735_p3;
        tmp5_reg_1009 <= grp_fu_747_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_1014 <= tmp_12_fu_718_p2;
        tmp_54_1_reg_1019 <= tmp_54_1_fu_722_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_0_ce0 = 1'b1;
    end else begin
        I_BRAM_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_1_ce0 = 1'b1;
    end else begin
        I_BRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_2_ce0 = 1'b1;
    end else begin
        I_BRAM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_3_ce0 = 1'b1;
    end else begin
        I_BRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_0_ce0 = 1'b1;
    end else begin
        O_BRAM_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_0_ce1 = 1'b1;
    end else begin
        O_BRAM_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_reg_pp0_iter5_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_0_we1 = 1'b1;
    end else begin
        O_BRAM_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_1_ce0 = 1'b1;
    end else begin
        O_BRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_1_ce1 = 1'b1;
    end else begin
        O_BRAM_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_reg_pp0_iter5_exitcond_flatten4_reg_783 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_1_we1 = 1'b1;
    end else begin
        O_BRAM_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_0_ce0 = 1'b1;
    end else begin
        W_BRAM_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_1_ce0 = 1'b1;
    end else begin
        W_BRAM_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_2_ce0 = 1'b1;
    end else begin
        W_BRAM_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_3_ce0 = 1'b1;
    end else begin
        W_BRAM_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_0_ce0 = 1'b1;
    end else begin
        W_BRAM_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_1_ce0 = 1'b1;
    end else begin
        W_BRAM_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_2_ce0 = 1'b1;
    end else begin
        W_BRAM_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_3_ce0 = 1'b1;
    end else begin
        W_BRAM_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_783 == 1'd0))) begin
        ap_phi_mux_r_phi_fu_297_p4 = r_cast1_mid2_reg_836;
    end else begin
        ap_phi_mux_r_phi_fu_297_p4 = r_reg_293;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_783 == 1'd0))) begin
        ap_phi_mux_s_phi_fu_308_p4 = s_cast1_mid2_reg_841;
    end else begin
        ap_phi_mux_s_phi_fu_308_p4 = s_reg_304;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_783 == 1'd0))) begin
        ap_phi_mux_te_phi_fu_319_p4 = tmp_7_mid2_reg_862;
    end else begin
        ap_phi_mux_te_phi_fu_319_p4 = te_reg_315;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign I_BRAM_0_address0 = tmp_31_cast_fu_688_p1;

assign I_BRAM_1_address0 = tmp_31_cast_fu_688_p1;

assign I_BRAM_2_address0 = tmp_31_cast_fu_688_p1;

assign I_BRAM_3_address0 = tmp_31_cast_fu_688_p1;

assign O_BRAM_0_address0 = tmp_32_cast_fu_713_p1;

assign O_BRAM_0_address1 = ap_reg_pp0_iter5_O_BRAM_0_addr_reg_898;

assign O_BRAM_0_d1 = tmp_12_reg_1014;

assign O_BRAM_1_address0 = tmp_32_cast_fu_713_p1;

assign O_BRAM_1_address1 = ap_reg_pp0_iter5_O_BRAM_1_addr_reg_904;

assign O_BRAM_1_d1 = tmp_54_1_reg_1019;

assign W_BRAM_0_0_address0 = tmp_4_mid2_fu_696_p1;

assign W_BRAM_0_1_address0 = tmp_4_mid2_fu_696_p1;

assign W_BRAM_0_2_address0 = tmp_4_mid2_fu_696_p1;

assign W_BRAM_0_3_address0 = tmp_4_mid2_fu_696_p1;

assign W_BRAM_1_0_address0 = tmp_4_mid2_fu_696_p1;

assign W_BRAM_1_1_address0 = tmp_4_mid2_fu_696_p1;

assign W_BRAM_1_2_address0 = tmp_4_mid2_fu_696_p1;

assign W_BRAM_1_3_address0 = tmp_4_mid2_fu_696_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond3_mid1_fu_595_p2 = (not_exitcond_flatten_1_fu_590_p2 & exitcond3_mid_fu_522_p2);

assign exitcond3_mid_fu_522_p2 = (not_exitcond_flatten_reg_803 & exitcond_fu_516_p2);

assign exitcond_flatten1_fu_361_p2 = ((indvar_flatten_reg_282 == 10'd729) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_337_p2 = ((indvar_flatten3_reg_260 == 15'd18225) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_349_p2 = ((indvar_flatten4_reg_271 == 13'd3645) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_367_p2 = (not_exitcond_flatten_fu_355_p2 & exitcond_flatten1_fu_361_p2);

assign exitcond_flatten_not_fu_585_p2 = (exitcond_flatten1_reg_808 ^ 1'd1);

assign exitcond_fu_516_p2 = ((tf_reg_326 == 5'd27) ? 1'b1 : 1'b0);

assign grp_fu_726_p0 = grp_fu_726_p00;

assign grp_fu_726_p00 = ap_reg_pp0_iter2_tmp_7_mid2_reg_862;

assign grp_fu_726_p1 = 10'd27;

assign grp_fu_726_p2 = grp_fu_726_p20;

assign grp_fu_726_p20 = ap_reg_pp0_iter2_tf_mid2_reg_851;

assign indvar_flatten25_op_fu_393_p2 = (indvar_flatten4_reg_271 + 13'd1);

assign indvar_flatten_next3_fu_399_p3 = ((exitcond_flatten_fu_349_p2[0:0] === 1'b1) ? 13'd1 : indvar_flatten25_op_fu_393_p2);

assign indvar_flatten_next4_fu_343_p2 = (indvar_flatten3_reg_260 + 15'd1);

assign indvar_flatten_next_fu_385_p3 = ((tmp_fu_373_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten_op_fu_379_p2);

assign indvar_flatten_op_fu_379_p2 = (indvar_flatten_reg_282 + 10'd1);

assign not_exitcond_flatten_1_fu_590_p2 = (exitcond_flatten_reg_792 | exitcond_flatten_not_fu_585_p2);

assign not_exitcond_flatten_fu_355_p2 = (exitcond_flatten_fu_349_p2 ^ 1'd1);

assign p_shl2_cast_fu_669_p1 = tmp_34_fu_662_p3;

assign p_shl_fu_415_p3 = {{ap_phi_mux_r_phi_fu_297_p4}, {2'd0}};

assign p_shl_mid1_fu_481_p3 = {{r_1_fu_449_p2}, {2'd0}};

assign p_shl_mid2_fu_489_p3 = ((exitcond_flatten_reg_792[0:0] === 1'b1) ? p_shl_mid1_fu_481_p3 : p_shl_fu_415_p3);

assign r_1_fu_449_p2 = (ap_phi_mux_r_phi_fu_297_p4 + 3'd1);

assign r_cast1_fu_407_p1 = ap_phi_mux_r_phi_fu_297_p4;

assign r_cast1_mid1_fu_462_p1 = r_1_fu_449_p2;

assign r_cast1_mid2_cast_fu_473_p1 = r_cast1_mid2_fu_466_p3;

assign r_cast1_mid2_fu_466_p3 = ((exitcond_flatten_reg_792[0:0] === 1'b1) ? r_1_fu_449_p2 : ap_phi_mux_r_phi_fu_297_p4);

assign r_cast_fu_411_p1 = ap_phi_mux_r_phi_fu_297_p4;

assign r_cast_mid2_cast_fu_477_p1 = r_cast1_mid2_fu_466_p3;

assign s_1_fu_527_p2 = (s_mid_fu_455_p3 + 3'd1);

assign s_cast1_mid2_cast_fu_547_p1 = s_cast1_mid2_fu_540_p3;

assign s_cast1_mid2_fu_540_p3 = ((exitcond_flatten_mid_reg_813[0:0] === 1'b1) ? s_1_fu_527_p2 : s_mid_fu_455_p3);

assign s_cast_fu_423_p1 = ap_phi_mux_s_phi_fu_308_p4;

assign s_cast_mid1_fu_551_p1 = s_1_fu_527_p2;

assign s_mid_fu_455_p3 = ((exitcond_flatten_reg_792[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_s_phi_fu_308_p4);

assign te_1_fu_601_p2 = (te_mid_fu_533_p3 + 5'd1);

assign te_mid_fu_533_p3 = ((tmp_reg_821[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_te_phi_fu_319_p4);

assign tf_1_fu_653_p2 = (tf_mid2_fu_617_p3 + 5'd1);

assign tf_mid2_fu_617_p3 = ((tmp_33_fu_612_p2[0:0] === 1'b1) ? 5'd0 : tf_reg_326);

assign tmp1_cast_fu_433_p1 = tmp1_fu_427_p2;

assign tmp1_cast_mid1_fu_561_p1 = tmp1_mid1_fu_555_p2;

assign tmp1_fu_427_p2 = (r_cast_fu_411_p1 + s_cast_fu_423_p1);

assign tmp1_mid1_fu_555_p2 = (s_cast_mid1_fu_551_p1 + r_cast_mid2_cast_fu_477_p1);

assign tmp_12_fu_718_p2 = ($signed(tmp2_reg_989) + $signed(grp_fu_759_p3));

assign tmp_13_fu_607_p2 = (exitcond_flatten_mid_reg_813 | exitcond3_mid1_fu_595_p2);

assign tmp_14_fu_673_p2 = (p_shl2_cast_fu_669_p1 - tmp_6_mid2_cast_fu_659_p1);

assign tmp_16_fu_682_p2 = (tmp_14_fu_673_p2 + tmp_9_cast_fu_679_p1);

assign tmp_31_cast_fu_688_p1 = tmp_16_fu_682_p2;

assign tmp_32_cast_fu_713_p1 = grp_fu_726_p3;

assign tmp_33_fu_612_p2 = (tmp_13_fu_607_p2 | exitcond_flatten_reg_792);

assign tmp_34_fu_662_p3 = {{tmp_6_mid2_reg_856}, {5'd0}};

assign tmp_4_mid248_v_fu_502_p3 = ((exitcond_flatten_reg_792[0:0] === 1'b1) ? tmp_mid_fu_496_p2 : tmp_s_fu_437_p2);

assign tmp_4_mid2_fu_696_p1 = ap_reg_pp0_iter2_tmp_4_mid2_v_reg_846;

assign tmp_4_mid2_v_fu_571_p3 = ((exitcond_flatten_mid_reg_813[0:0] === 1'b1) ? tmp_mid1_fu_565_p2 : tmp_4_mid248_v_fu_502_p3);

assign tmp_54_1_fu_722_p2 = ($signed(tmp5_reg_1009) + $signed(grp_fu_771_p3));

assign tmp_5_fu_443_p2 = (r_cast1_fu_407_p1 + ap_phi_mux_te_phi_fu_319_p4);

assign tmp_5_mid1_fu_625_p2 = (te_1_fu_601_p2 + r_cast1_mid2_cast_fu_473_p1);

assign tmp_6_mid2_cast_fu_659_p1 = tmp_6_mid2_reg_856;

assign tmp_6_mid2_fu_631_p3 = ((exitcond3_mid1_fu_595_p2[0:0] === 1'b1) ? tmp_5_mid1_fu_625_p2 : tmp_6_mid5_fu_578_p3);

assign tmp_6_mid3_fu_509_p3 = ((exitcond_flatten_reg_792[0:0] === 1'b1) ? r_cast1_mid1_fu_462_p1 : tmp_5_fu_443_p2);

assign tmp_6_mid5_fu_578_p3 = ((exitcond_flatten_mid_reg_813[0:0] === 1'b1) ? r_cast1_mid2_cast_fu_473_p1 : tmp_6_mid3_fu_509_p3);

assign tmp_7_mid2_fu_639_p3 = ((exitcond3_mid1_fu_595_p2[0:0] === 1'b1) ? te_1_fu_601_p2 : te_mid_fu_533_p3);

assign tmp_8_fu_647_p2 = (tf_mid2_fu_617_p3 + s_cast1_mid2_cast_fu_547_p1);

assign tmp_9_cast_fu_679_p1 = tmp_8_reg_868;

assign tmp_fu_373_p2 = (exitcond_flatten_mid_fu_367_p2 | exitcond_flatten_fu_349_p2);

assign tmp_mid1_fu_565_p2 = (p_shl_mid2_fu_489_p3 + tmp1_cast_mid1_fu_561_p1);

assign tmp_mid_fu_496_p2 = (p_shl_mid1_fu_481_p3 + r_cast1_mid1_fu_462_p1);

assign tmp_s_fu_437_p2 = (tmp1_cast_fu_433_p1 + p_shl_fu_415_p3);

endmodule //computation
