// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module computation (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        O_BRAM_0_address0,
        O_BRAM_0_ce0,
        O_BRAM_0_q0,
        O_BRAM_0_address1,
        O_BRAM_0_ce1,
        O_BRAM_0_we1,
        O_BRAM_0_d1,
        O_BRAM_1_address0,
        O_BRAM_1_ce0,
        O_BRAM_1_q0,
        O_BRAM_1_address1,
        O_BRAM_1_ce1,
        O_BRAM_1_we1,
        O_BRAM_1_d1,
        I_BRAM_0_address0,
        I_BRAM_0_ce0,
        I_BRAM_0_q0,
        I_BRAM_1_address0,
        I_BRAM_1_ce0,
        I_BRAM_1_q0,
        I_BRAM_2_address0,
        I_BRAM_2_ce0,
        I_BRAM_2_q0,
        I_BRAM_3_address0,
        I_BRAM_3_ce0,
        I_BRAM_3_q0,
        W_BRAM_0_0_address0,
        W_BRAM_0_0_ce0,
        W_BRAM_0_0_q0,
        W_BRAM_0_1_address0,
        W_BRAM_0_1_ce0,
        W_BRAM_0_1_q0,
        W_BRAM_0_2_address0,
        W_BRAM_0_2_ce0,
        W_BRAM_0_2_q0,
        W_BRAM_0_3_address0,
        W_BRAM_0_3_ce0,
        W_BRAM_0_3_q0,
        W_BRAM_1_0_address0,
        W_BRAM_1_0_ce0,
        W_BRAM_1_0_q0,
        W_BRAM_1_1_address0,
        W_BRAM_1_1_ce0,
        W_BRAM_1_1_q0,
        W_BRAM_1_2_address0,
        W_BRAM_1_2_ce0,
        W_BRAM_1_2_q0,
        W_BRAM_1_3_address0,
        W_BRAM_1_3_ce0,
        W_BRAM_1_3_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] O_BRAM_0_address0;
output   O_BRAM_0_ce0;
input  [15:0] O_BRAM_0_q0;
output  [7:0] O_BRAM_0_address1;
output   O_BRAM_0_ce1;
output   O_BRAM_0_we1;
output  [15:0] O_BRAM_0_d1;
output  [7:0] O_BRAM_1_address0;
output   O_BRAM_1_ce0;
input  [15:0] O_BRAM_1_q0;
output  [7:0] O_BRAM_1_address1;
output   O_BRAM_1_ce1;
output   O_BRAM_1_we1;
output  [15:0] O_BRAM_1_d1;
output  [7:0] I_BRAM_0_address0;
output   I_BRAM_0_ce0;
input  [15:0] I_BRAM_0_q0;
output  [7:0] I_BRAM_1_address0;
output   I_BRAM_1_ce0;
input  [15:0] I_BRAM_1_q0;
output  [7:0] I_BRAM_2_address0;
output   I_BRAM_2_ce0;
input  [15:0] I_BRAM_2_q0;
output  [7:0] I_BRAM_3_address0;
output   I_BRAM_3_ce0;
input  [15:0] I_BRAM_3_q0;
output  [3:0] W_BRAM_0_0_address0;
output   W_BRAM_0_0_ce0;
input  [15:0] W_BRAM_0_0_q0;
output  [3:0] W_BRAM_0_1_address0;
output   W_BRAM_0_1_ce0;
input  [15:0] W_BRAM_0_1_q0;
output  [3:0] W_BRAM_0_2_address0;
output   W_BRAM_0_2_ce0;
input  [15:0] W_BRAM_0_2_q0;
output  [3:0] W_BRAM_0_3_address0;
output   W_BRAM_0_3_ce0;
input  [15:0] W_BRAM_0_3_q0;
output  [3:0] W_BRAM_1_0_address0;
output   W_BRAM_1_0_ce0;
input  [15:0] W_BRAM_1_0_q0;
output  [3:0] W_BRAM_1_1_address0;
output   W_BRAM_1_1_ce0;
input  [15:0] W_BRAM_1_1_q0;
output  [3:0] W_BRAM_1_2_address0;
output   W_BRAM_1_2_ce0;
input  [15:0] W_BRAM_1_2_q0;
output  [3:0] W_BRAM_1_3_address0;
output   W_BRAM_1_3_ce0;
input  [15:0] W_BRAM_1_3_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg O_BRAM_0_ce0;
reg O_BRAM_0_ce1;
reg O_BRAM_0_we1;
reg O_BRAM_1_ce0;
reg O_BRAM_1_ce1;
reg O_BRAM_1_we1;
reg I_BRAM_0_ce0;
reg I_BRAM_1_ce0;
reg I_BRAM_2_ce0;
reg I_BRAM_3_ce0;
reg W_BRAM_0_0_ce0;
reg W_BRAM_0_1_ce0;
reg W_BRAM_0_2_ce0;
reg W_BRAM_0_3_ce0;
reg W_BRAM_1_0_ce0;
reg W_BRAM_1_1_ce0;
reg W_BRAM_1_2_ce0;
reg W_BRAM_1_3_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten3_reg_258;
reg   [9:0] indvar_flatten4_reg_269;
reg   [7:0] indvar_flatten_reg_280;
reg   [1:0] r_reg_291;
reg   [1:0] s_reg_302;
reg   [3:0] te_reg_313;
reg   [3:0] tf_reg_324;
wire   [0:0] exitcond_flatten4_fu_335_p2;
reg   [0:0] exitcond_flatten4_reg_778;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten4_reg_778;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten4_reg_778;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten4_reg_778;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten4_reg_778;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten4_reg_778;
wire   [10:0] indvar_flatten_next4_fu_341_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_347_p2;
reg   [0:0] exitcond_flatten_reg_787;
wire   [0:0] not_exitcond_flatten_fu_353_p2;
reg   [0:0] not_exitcond_flatten_reg_798;
wire   [0:0] exitcond_flatten1_fu_359_p2;
reg   [0:0] exitcond_flatten1_reg_803;
wire   [0:0] exitcond_flatten_mid_fu_365_p2;
reg   [0:0] exitcond_flatten_mid_reg_808;
wire   [0:0] tmp_13_fu_371_p2;
reg   [0:0] tmp_13_reg_816;
wire   [7:0] indvar_flatten_next_fu_383_p3;
wire   [9:0] indvar_flatten_next3_fu_397_p3;
wire   [1:0] r_cast1_mid2_fu_464_p3;
reg   [1:0] r_cast1_mid2_reg_831;
reg    ap_enable_reg_pp0_iter1;
wire   [1:0] s_cast_mid2_fu_542_p3;
reg   [1:0] s_cast_mid2_reg_836;
wire   [4:0] tmp_4_mid2_v_v_fu_559_p3;
reg   [4:0] tmp_4_mid2_v_v_reg_842;
reg   [4:0] ap_reg_pp0_iter2_tmp_4_mid2_v_v_reg_842;
wire   [3:0] tf_mid2_fu_605_p3;
reg   [3:0] tf_mid2_reg_847;
reg   [3:0] ap_reg_pp0_iter2_tf_mid2_reg_847;
wire   [3:0] tmp_6_mid2_fu_619_p3;
reg   [3:0] tmp_6_mid2_reg_853;
wire   [3:0] tmp_7_mid2_fu_627_p3;
reg   [3:0] tmp_7_mid2_reg_859;
reg   [3:0] ap_reg_pp0_iter2_tmp_7_mid2_reg_859;
wire   [3:0] tf_1_fu_635_p2;
reg   [7:0] O_BRAM_0_addr_reg_890;
reg   [7:0] ap_reg_pp0_iter4_O_BRAM_0_addr_reg_890;
reg   [7:0] ap_reg_pp0_iter5_O_BRAM_0_addr_reg_890;
reg   [7:0] O_BRAM_1_addr_reg_896;
reg   [7:0] ap_reg_pp0_iter4_O_BRAM_1_addr_reg_896;
reg   [7:0] ap_reg_pp0_iter5_O_BRAM_1_addr_reg_896;
reg  signed [15:0] I_BRAM_0_load_reg_902;
reg  signed [15:0] I_BRAM_1_load_reg_913;
reg  signed [15:0] ap_reg_pp0_iter4_I_BRAM_1_load_reg_913;
reg  signed [15:0] I_BRAM_2_load_reg_924;
reg  signed [15:0] ap_reg_pp0_iter4_I_BRAM_2_load_reg_924;
reg  signed [15:0] I_BRAM_3_load_reg_935;
reg  signed [15:0] W_BRAM_0_1_load_reg_966;
reg  signed [15:0] W_BRAM_0_2_load_reg_971;
wire  signed [15:0] tmp_52_0_3_fu_737_p2;
reg  signed [15:0] tmp_52_0_3_reg_976;
wire  signed [15:0] grp_fu_730_p3;
reg  signed [15:0] tmp1_reg_981;
reg    ap_enable_reg_pp0_iter4;
reg  signed [15:0] W_BRAM_1_1_load_reg_986;
reg  signed [15:0] W_BRAM_1_2_load_reg_991;
wire  signed [15:0] tmp_52_1_3_fu_749_p2;
reg  signed [15:0] tmp_52_1_3_reg_996;
wire  signed [15:0] grp_fu_742_p3;
reg  signed [15:0] tmp4_reg_1001;
(* use_dsp48 = "no" *) wire   [15:0] tmp_12_fu_713_p2;
reg   [15:0] tmp_12_reg_1006;
(* use_dsp48 = "no" *) wire   [15:0] tmp_54_1_fu_717_p2;
reg   [15:0] tmp_54_1_reg_1011;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [1:0] ap_phi_mux_r_phi_fu_295_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_s_phi_fu_306_p4;
reg   [3:0] ap_phi_mux_te_phi_fu_317_p4;
wire   [63:0] tmp_33_cast_fu_679_p1;
wire   [63:0] tmp_34_cast_fu_708_p1;
wire   [63:0] tmp_4_mid2_fu_690_p1;
wire   [7:0] indvar_flatten_op_fu_377_p2;
wire   [9:0] indvar_flatten25_op_fu_391_p2;
wire   [3:0] p_shl_fu_413_p3;
wire   [4:0] p_shl_cast_fu_421_p1;
wire   [4:0] r_cast_fu_405_p1;
wire   [4:0] tmp_fu_425_p2;
wire   [4:0] s_cast9_fu_431_p1;
wire   [3:0] r_cast1_fu_409_p1;
wire   [1:0] r_1_fu_447_p2;
wire   [3:0] p_shl_mid1_fu_475_p3;
wire   [4:0] p_shl_cast_mid1_fu_483_p1;
wire   [4:0] r_cast_mid1_fu_460_p1;
wire   [4:0] tmp_mid1_fu_487_p2;
wire   [4:0] tmp_s_fu_435_p2;
wire   [3:0] tmp_6_mid_cast_fu_507_p1;
wire   [3:0] tmp_5_fu_441_p2;
wire   [0:0] exitcond_fu_518_p2;
wire   [1:0] s_mid_fu_453_p3;
wire   [1:0] s_1_fu_529_p2;
wire   [4:0] s_cast9_mid1_fu_549_p1;
wire   [4:0] tmp_mid2_fu_493_p3;
wire   [4:0] tmp_mid1_3_fu_553_p2;
wire   [4:0] tmp_4_mid246_v_v_fu_500_p3;
wire   [3:0] r_cast1_mid2_cast_fu_471_p1;
wire   [3:0] tmp_6_mid3_fu_511_p3;
wire   [0:0] exitcond_flatten_not_fu_573_p2;
wire   [0:0] exitcond3_mid_fu_524_p2;
wire   [0:0] not_exitcond_flatten_1_fu_578_p2;
wire   [3:0] te_mid_fu_535_p3;
wire   [0:0] exitcond3_mid1_fu_583_p2;
wire   [0:0] tmp_14_fu_595_p2;
wire   [0:0] tmp_35_fu_600_p2;
wire   [3:0] te_1_fu_589_p2;
wire   [3:0] tmp_5_mid1_fu_613_p2;
wire   [3:0] tmp_6_mid5_fu_566_p3;
wire   [7:0] tmp_36_fu_647_p3;
wire   [8:0] p_shl2_cast_fu_654_p1;
wire   [8:0] tmp_6_mid2_cast_fu_644_p1;
wire   [3:0] s_cast_mid2_cast_fu_641_p1;
wire   [3:0] tmp_8_fu_664_p2;
wire   [8:0] tmp_15_fu_658_p2;
wire   [8:0] tmp_9_cast_fu_669_p1;
wire   [8:0] tmp_17_fu_673_p2;
wire  signed [31:0] tmp_4_mid2_v_fu_687_p1;
wire   [7:0] grp_fu_721_p3;
wire  signed [15:0] grp_fu_754_p3;
wire  signed [15:0] grp_fu_766_p3;
wire   [3:0] grp_fu_721_p0;
wire   [4:0] grp_fu_721_p1;
wire   [3:0] grp_fu_721_p2;
wire  signed [15:0] grp_fu_760_p3;
wire  signed [15:0] grp_fu_772_p3;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [7:0] grp_fu_721_p00;
wire   [7:0] grp_fu_721_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

HLS4x2_4_mac_mulabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
HLS4x2_4_mac_mulabkb_U19(
    .din0(grp_fu_721_p0),
    .din1(grp_fu_721_p1),
    .din2(grp_fu_721_p2),
    .dout(grp_fu_721_p3)
);

HLS4x2_4_mac_mulacud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mac_mulacud_U20(
    .din0(W_BRAM_0_0_q0),
    .din1(I_BRAM_0_load_reg_902),
    .din2(O_BRAM_0_q0),
    .dout(grp_fu_730_p3)
);

HLS4x2_4_mul_mul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mul_mul_dEe_U21(
    .din0(W_BRAM_0_3_q0),
    .din1(I_BRAM_3_load_reg_935),
    .dout(tmp_52_0_3_fu_737_p2)
);

HLS4x2_4_mac_mulacud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mac_mulacud_U22(
    .din0(W_BRAM_1_0_q0),
    .din1(I_BRAM_0_load_reg_902),
    .din2(O_BRAM_1_q0),
    .dout(grp_fu_742_p3)
);

HLS4x2_4_mul_mul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mul_mul_dEe_U23(
    .din0(W_BRAM_1_3_q0),
    .din1(I_BRAM_3_load_reg_935),
    .dout(tmp_52_1_3_fu_749_p2)
);

HLS4x2_4_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mac_mulaeOg_U24(
    .din0(W_BRAM_0_1_load_reg_966),
    .din1(ap_reg_pp0_iter4_I_BRAM_1_load_reg_913),
    .din2(grp_fu_760_p3),
    .dout(grp_fu_754_p3)
);

HLS4x2_4_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mac_mulaeOg_U25(
    .din0(W_BRAM_0_2_load_reg_971),
    .din1(ap_reg_pp0_iter4_I_BRAM_2_load_reg_924),
    .din2(tmp_52_0_3_reg_976),
    .dout(grp_fu_760_p3)
);

HLS4x2_4_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mac_mulaeOg_U26(
    .din0(W_BRAM_1_1_load_reg_986),
    .din1(ap_reg_pp0_iter4_I_BRAM_1_load_reg_913),
    .din2(grp_fu_772_p3),
    .dout(grp_fu_766_p3)
);

HLS4x2_4_mac_mulaeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
HLS4x2_4_mac_mulaeOg_U27(
    .din0(W_BRAM_1_2_load_reg_991),
    .din1(ap_reg_pp0_iter4_I_BRAM_2_load_reg_924),
    .din2(tmp_52_1_3_reg_996),
    .dout(grp_fu_772_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_fu_335_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_335_p2 == 1'd0))) begin
        indvar_flatten3_reg_258 <= indvar_flatten_next4_fu_341_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten3_reg_258 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_335_p2 == 1'd0))) begin
        indvar_flatten4_reg_269 <= indvar_flatten_next3_fu_397_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten4_reg_269 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_335_p2 == 1'd0))) begin
        indvar_flatten_reg_280 <= indvar_flatten_next_fu_383_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_280 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_reg_291 <= r_cast1_mid2_reg_831;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_291 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        s_reg_302 <= s_cast_mid2_reg_836;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_reg_302 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        te_reg_313 <= tmp_7_mid2_reg_859;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        te_reg_313 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_778 == 1'd0))) begin
        tf_reg_324 <= tf_1_fu_635_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tf_reg_324 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_0_load_reg_902 <= I_BRAM_0_q0;
        I_BRAM_1_load_reg_913 <= I_BRAM_1_q0;
        I_BRAM_2_load_reg_924 <= I_BRAM_2_q0;
        I_BRAM_3_load_reg_935 <= I_BRAM_3_q0;
        O_BRAM_0_addr_reg_890 <= tmp_34_cast_fu_708_p1;
        O_BRAM_1_addr_reg_896 <= tmp_34_cast_fu_708_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_1_load_reg_966 <= W_BRAM_0_1_q0;
        W_BRAM_0_2_load_reg_971 <= W_BRAM_0_2_q0;
        W_BRAM_1_1_load_reg_986 <= W_BRAM_1_1_q0;
        W_BRAM_1_2_load_reg_991 <= W_BRAM_1_2_q0;
        tmp_52_0_3_reg_976 <= tmp_52_0_3_fu_737_p2;
        tmp_52_1_3_reg_996 <= tmp_52_1_3_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_flatten4_reg_778 <= exitcond_flatten4_reg_778;
        exitcond_flatten4_reg_778 <= exitcond_flatten4_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond_flatten4_reg_778 <= ap_reg_pp0_iter1_exitcond_flatten4_reg_778;
        ap_reg_pp0_iter2_tf_mid2_reg_847 <= tf_mid2_reg_847;
        ap_reg_pp0_iter2_tmp_4_mid2_v_v_reg_842 <= tmp_4_mid2_v_v_reg_842;
        ap_reg_pp0_iter2_tmp_7_mid2_reg_859 <= tmp_7_mid2_reg_859;
        ap_reg_pp0_iter3_exitcond_flatten4_reg_778 <= ap_reg_pp0_iter2_exitcond_flatten4_reg_778;
        ap_reg_pp0_iter4_I_BRAM_1_load_reg_913 <= I_BRAM_1_load_reg_913;
        ap_reg_pp0_iter4_I_BRAM_2_load_reg_924 <= I_BRAM_2_load_reg_924;
        ap_reg_pp0_iter4_O_BRAM_0_addr_reg_890 <= O_BRAM_0_addr_reg_890;
        ap_reg_pp0_iter4_O_BRAM_1_addr_reg_896 <= O_BRAM_1_addr_reg_896;
        ap_reg_pp0_iter4_exitcond_flatten4_reg_778 <= ap_reg_pp0_iter3_exitcond_flatten4_reg_778;
        ap_reg_pp0_iter5_O_BRAM_0_addr_reg_890 <= ap_reg_pp0_iter4_O_BRAM_0_addr_reg_890;
        ap_reg_pp0_iter5_O_BRAM_1_addr_reg_896 <= ap_reg_pp0_iter4_O_BRAM_1_addr_reg_896;
        ap_reg_pp0_iter5_exitcond_flatten4_reg_778 <= ap_reg_pp0_iter4_exitcond_flatten4_reg_778;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_fu_335_p2 == 1'd0))) begin
        exitcond_flatten1_reg_803 <= exitcond_flatten1_fu_359_p2;
        exitcond_flatten_mid_reg_808 <= exitcond_flatten_mid_fu_365_p2;
        exitcond_flatten_reg_787 <= exitcond_flatten_fu_347_p2;
        not_exitcond_flatten_reg_798 <= not_exitcond_flatten_fu_353_p2;
        tmp_13_reg_816 <= tmp_13_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_778 == 1'd0))) begin
        r_cast1_mid2_reg_831 <= r_cast1_mid2_fu_464_p3;
        s_cast_mid2_reg_836 <= s_cast_mid2_fu_542_p3;
        tmp_7_mid2_reg_859 <= tmp_7_mid2_fu_627_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten4_reg_778 == 1'd0))) begin
        tf_mid2_reg_847 <= tf_mid2_fu_605_p3;
        tmp_4_mid2_v_v_reg_842 <= tmp_4_mid2_v_v_fu_559_p3;
        tmp_6_mid2_reg_853 <= tmp_6_mid2_fu_619_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp1_reg_981 <= grp_fu_730_p3;
        tmp4_reg_1001 <= grp_fu_742_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_1006 <= tmp_12_fu_713_p2;
        tmp_54_1_reg_1011 <= tmp_54_1_fu_717_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_0_ce0 = 1'b1;
    end else begin
        I_BRAM_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_1_ce0 = 1'b1;
    end else begin
        I_BRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_2_ce0 = 1'b1;
    end else begin
        I_BRAM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_BRAM_3_ce0 = 1'b1;
    end else begin
        I_BRAM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_0_ce0 = 1'b1;
    end else begin
        O_BRAM_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_0_ce1 = 1'b1;
    end else begin
        O_BRAM_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_reg_pp0_iter5_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_0_we1 = 1'b1;
    end else begin
        O_BRAM_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_1_ce0 = 1'b1;
    end else begin
        O_BRAM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_1_ce1 = 1'b1;
    end else begin
        O_BRAM_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_reg_pp0_iter5_exitcond_flatten4_reg_778 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_BRAM_1_we1 = 1'b1;
    end else begin
        O_BRAM_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_0_ce0 = 1'b1;
    end else begin
        W_BRAM_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_1_ce0 = 1'b1;
    end else begin
        W_BRAM_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_2_ce0 = 1'b1;
    end else begin
        W_BRAM_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_0_3_ce0 = 1'b1;
    end else begin
        W_BRAM_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_0_ce0 = 1'b1;
    end else begin
        W_BRAM_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_1_ce0 = 1'b1;
    end else begin
        W_BRAM_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_2_ce0 = 1'b1;
    end else begin
        W_BRAM_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_BRAM_1_3_ce0 = 1'b1;
    end else begin
        W_BRAM_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_778 == 1'd0))) begin
        ap_phi_mux_r_phi_fu_295_p4 = r_cast1_mid2_reg_831;
    end else begin
        ap_phi_mux_r_phi_fu_295_p4 = r_reg_291;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_778 == 1'd0))) begin
        ap_phi_mux_s_phi_fu_306_p4 = s_cast_mid2_reg_836;
    end else begin
        ap_phi_mux_s_phi_fu_306_p4 = s_reg_302;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_778 == 1'd0))) begin
        ap_phi_mux_te_phi_fu_317_p4 = tmp_7_mid2_reg_859;
    end else begin
        ap_phi_mux_te_phi_fu_317_p4 = te_reg_313;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign I_BRAM_0_address0 = tmp_33_cast_fu_679_p1;

assign I_BRAM_1_address0 = tmp_33_cast_fu_679_p1;

assign I_BRAM_2_address0 = tmp_33_cast_fu_679_p1;

assign I_BRAM_3_address0 = tmp_33_cast_fu_679_p1;

assign O_BRAM_0_address0 = tmp_34_cast_fu_708_p1;

assign O_BRAM_0_address1 = ap_reg_pp0_iter5_O_BRAM_0_addr_reg_890;

assign O_BRAM_0_d1 = tmp_12_reg_1006;

assign O_BRAM_1_address0 = tmp_34_cast_fu_708_p1;

assign O_BRAM_1_address1 = ap_reg_pp0_iter5_O_BRAM_1_addr_reg_896;

assign O_BRAM_1_d1 = tmp_54_1_reg_1011;

assign W_BRAM_0_0_address0 = tmp_4_mid2_fu_690_p1;

assign W_BRAM_0_1_address0 = tmp_4_mid2_fu_690_p1;

assign W_BRAM_0_2_address0 = tmp_4_mid2_fu_690_p1;

assign W_BRAM_0_3_address0 = tmp_4_mid2_fu_690_p1;

assign W_BRAM_1_0_address0 = tmp_4_mid2_fu_690_p1;

assign W_BRAM_1_1_address0 = tmp_4_mid2_fu_690_p1;

assign W_BRAM_1_2_address0 = tmp_4_mid2_fu_690_p1;

assign W_BRAM_1_3_address0 = tmp_4_mid2_fu_690_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond3_mid1_fu_583_p2 = (not_exitcond_flatten_1_fu_578_p2 & exitcond3_mid_fu_524_p2);

assign exitcond3_mid_fu_524_p2 = (not_exitcond_flatten_reg_798 & exitcond_fu_518_p2);

assign exitcond_flatten1_fu_359_p2 = ((indvar_flatten_reg_280 == 8'd169) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_335_p2 = ((indvar_flatten3_reg_258 == 11'd1521) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_347_p2 = ((indvar_flatten4_reg_269 == 10'd507) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_365_p2 = (not_exitcond_flatten_fu_353_p2 & exitcond_flatten1_fu_359_p2);

assign exitcond_flatten_not_fu_573_p2 = (exitcond_flatten1_reg_803 ^ 1'd1);

assign exitcond_fu_518_p2 = ((tf_reg_324 == 4'd13) ? 1'b1 : 1'b0);

assign grp_fu_721_p0 = grp_fu_721_p00;

assign grp_fu_721_p00 = ap_reg_pp0_iter2_tmp_7_mid2_reg_859;

assign grp_fu_721_p1 = 8'd13;

assign grp_fu_721_p2 = grp_fu_721_p20;

assign grp_fu_721_p20 = ap_reg_pp0_iter2_tf_mid2_reg_847;

assign indvar_flatten25_op_fu_391_p2 = (indvar_flatten4_reg_269 + 10'd1);

assign indvar_flatten_next3_fu_397_p3 = ((exitcond_flatten_fu_347_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten25_op_fu_391_p2);

assign indvar_flatten_next4_fu_341_p2 = (indvar_flatten3_reg_258 + 11'd1);

assign indvar_flatten_next_fu_383_p3 = ((tmp_13_fu_371_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_377_p2);

assign indvar_flatten_op_fu_377_p2 = (indvar_flatten_reg_280 + 8'd1);

assign not_exitcond_flatten_1_fu_578_p2 = (exitcond_flatten_reg_787 | exitcond_flatten_not_fu_573_p2);

assign not_exitcond_flatten_fu_353_p2 = (exitcond_flatten_fu_347_p2 ^ 1'd1);

assign p_shl2_cast_fu_654_p1 = tmp_36_fu_647_p3;

assign p_shl_cast_fu_421_p1 = p_shl_fu_413_p3;

assign p_shl_cast_mid1_fu_483_p1 = p_shl_mid1_fu_475_p3;

assign p_shl_fu_413_p3 = {{ap_phi_mux_r_phi_fu_295_p4}, {2'd0}};

assign p_shl_mid1_fu_475_p3 = {{r_1_fu_447_p2}, {2'd0}};

assign r_1_fu_447_p2 = (ap_phi_mux_r_phi_fu_295_p4 + 2'd1);

assign r_cast1_fu_409_p1 = ap_phi_mux_r_phi_fu_295_p4;

assign r_cast1_mid2_cast_fu_471_p1 = r_cast1_mid2_fu_464_p3;

assign r_cast1_mid2_fu_464_p3 = ((exitcond_flatten_reg_787[0:0] === 1'b1) ? r_1_fu_447_p2 : ap_phi_mux_r_phi_fu_295_p4);

assign r_cast_fu_405_p1 = ap_phi_mux_r_phi_fu_295_p4;

assign r_cast_mid1_fu_460_p1 = r_1_fu_447_p2;

assign s_1_fu_529_p2 = (s_mid_fu_453_p3 + 2'd1);

assign s_cast9_fu_431_p1 = ap_phi_mux_s_phi_fu_306_p4;

assign s_cast9_mid1_fu_549_p1 = s_1_fu_529_p2;

assign s_cast_mid2_cast_fu_641_p1 = s_cast_mid2_reg_836;

assign s_cast_mid2_fu_542_p3 = ((exitcond_flatten_mid_reg_808[0:0] === 1'b1) ? s_1_fu_529_p2 : s_mid_fu_453_p3);

assign s_mid_fu_453_p3 = ((exitcond_flatten_reg_787[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_s_phi_fu_306_p4);

assign te_1_fu_589_p2 = (te_mid_fu_535_p3 + 4'd1);

assign te_mid_fu_535_p3 = ((tmp_13_reg_816[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_te_phi_fu_317_p4);

assign tf_1_fu_635_p2 = (tf_mid2_fu_605_p3 + 4'd1);

assign tf_mid2_fu_605_p3 = ((tmp_35_fu_600_p2[0:0] === 1'b1) ? 4'd0 : tf_reg_324);

assign tmp_12_fu_713_p2 = ($signed(tmp1_reg_981) + $signed(grp_fu_754_p3));

assign tmp_13_fu_371_p2 = (exitcond_flatten_mid_fu_365_p2 | exitcond_flatten_fu_347_p2);

assign tmp_14_fu_595_p2 = (exitcond_flatten_mid_reg_808 | exitcond3_mid1_fu_583_p2);

assign tmp_15_fu_658_p2 = (p_shl2_cast_fu_654_p1 - tmp_6_mid2_cast_fu_644_p1);

assign tmp_17_fu_673_p2 = (tmp_15_fu_658_p2 + tmp_9_cast_fu_669_p1);

assign tmp_33_cast_fu_679_p1 = tmp_17_fu_673_p2;

assign tmp_34_cast_fu_708_p1 = grp_fu_721_p3;

assign tmp_35_fu_600_p2 = (tmp_14_fu_595_p2 | exitcond_flatten_reg_787);

assign tmp_36_fu_647_p3 = {{tmp_6_mid2_reg_853}, {4'd0}};

assign tmp_4_mid246_v_v_fu_500_p3 = ((exitcond_flatten_reg_787[0:0] === 1'b1) ? tmp_mid1_fu_487_p2 : tmp_s_fu_435_p2);

assign tmp_4_mid2_fu_690_p1 = $unsigned(tmp_4_mid2_v_fu_687_p1);

assign tmp_4_mid2_v_fu_687_p1 = $signed(ap_reg_pp0_iter2_tmp_4_mid2_v_v_reg_842);

assign tmp_4_mid2_v_v_fu_559_p3 = ((exitcond_flatten_mid_reg_808[0:0] === 1'b1) ? tmp_mid1_3_fu_553_p2 : tmp_4_mid246_v_v_fu_500_p3);

assign tmp_54_1_fu_717_p2 = ($signed(tmp4_reg_1001) + $signed(grp_fu_766_p3));

assign tmp_5_fu_441_p2 = (r_cast1_fu_409_p1 + ap_phi_mux_te_phi_fu_317_p4);

assign tmp_5_mid1_fu_613_p2 = (te_1_fu_589_p2 + r_cast1_mid2_cast_fu_471_p1);

assign tmp_6_mid2_cast_fu_644_p1 = tmp_6_mid2_reg_853;

assign tmp_6_mid2_fu_619_p3 = ((exitcond3_mid1_fu_583_p2[0:0] === 1'b1) ? tmp_5_mid1_fu_613_p2 : tmp_6_mid5_fu_566_p3);

assign tmp_6_mid3_fu_511_p3 = ((exitcond_flatten_reg_787[0:0] === 1'b1) ? tmp_6_mid_cast_fu_507_p1 : tmp_5_fu_441_p2);

assign tmp_6_mid5_fu_566_p3 = ((exitcond_flatten_mid_reg_808[0:0] === 1'b1) ? r_cast1_mid2_cast_fu_471_p1 : tmp_6_mid3_fu_511_p3);

assign tmp_6_mid_cast_fu_507_p1 = r_1_fu_447_p2;

assign tmp_7_mid2_fu_627_p3 = ((exitcond3_mid1_fu_583_p2[0:0] === 1'b1) ? te_1_fu_589_p2 : te_mid_fu_535_p3);

assign tmp_8_fu_664_p2 = (tf_mid2_reg_847 + s_cast_mid2_cast_fu_641_p1);

assign tmp_9_cast_fu_669_p1 = tmp_8_fu_664_p2;

assign tmp_fu_425_p2 = (p_shl_cast_fu_421_p1 - r_cast_fu_405_p1);

assign tmp_mid1_3_fu_553_p2 = (s_cast9_mid1_fu_549_p1 + tmp_mid2_fu_493_p3);

assign tmp_mid1_fu_487_p2 = (p_shl_cast_mid1_fu_483_p1 - r_cast_mid1_fu_460_p1);

assign tmp_mid2_fu_493_p3 = ((exitcond_flatten_reg_787[0:0] === 1'b1) ? tmp_mid1_fu_487_p2 : tmp_fu_425_p2);

assign tmp_s_fu_435_p2 = (tmp_fu_425_p2 + s_cast9_fu_431_p1);

endmodule //computation
